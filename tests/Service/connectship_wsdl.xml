<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions name="AMPServices" targetNamespace="urn:connectship-com:ampcore" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:amp="urn:connectship-com:ampcore" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
	<wsdl:types>
		<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="urn:connectship-com:ampcore" version="3">
			<xs:complexType name="Commitment">
				<xs:annotation>
					<xs:documentation>Represents the delivery commitment for a shipment.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="symbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>The symbolic name of the commitment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The friendly name of the commitment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="days" type="xs:int">
						<xs:annotation>
							<xs:documentation>The number of transit days of the commitment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="00:00:00" name="time" type="xs:time">
						<xs:annotation>
							<xs:documentation>The latest delivery time of the commitment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="comparisonValue" type="xs:int">
						<xs:annotation>
							<xs:documentation>Value that can be used to compare commitments.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="Dimensions">
				<xs:annotation>
					<xs:documentation>Represents a set of three dimensions: length, width, height.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" default="0.0" name="length" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The length dimension.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0.0" name="width" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The width dimension.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0.0" name="height" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The height dimension.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unit">
						<xs:annotation>
							<xs:documentation>The dimension units (in, cm).</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="((i|I)(n|N))|((c|C)(m|M))"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element minOccurs="0" name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>A string representation of the dimensions. The string can be a series of up to three numbers, separated by any alphabetic or whitespace characters. The dimension values will be sorted highest to lowest into length, width, and height respectively. Units (in, cm) may also be present in the string.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="Group">
				<xs:annotation>
					<xs:documentation>Represents a carrier-defined group of packages.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="symbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>The symbolic name of the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The friendly name of the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="id" type="xs:int">
						<xs:annotation>
							<xs:documentation>The unique id of the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="status" type="xs:int">
						<xs:annotation>
							<xs:documentation>The open/closed/locked status of the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="dateOpened" type="xs:date">
						<xs:annotation>
							<xs:documentation>The date the group was last opened.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="data" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>The component-owned data associated with the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="Identity">
				<xs:annotation>
					<xs:documentation>Represents a unique identity of a value.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element name="symbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>The symbolic name of the identity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The friendly name of the identity.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="Money">
				<xs:annotation>
					<xs:documentation>Represents a monetary value.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" default="0.0" name="amount" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The amount of the monetary value in the specified currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="currency">
						<xs:annotation>
							<xs:documentation>The ISO 4217 currency code of the monetary value.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="[A-Za-z]{3}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element minOccurs="0" name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>A string representation of the monetary value. An ISO 4217 currency code may also be specified.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="HazmatQuantity">
				<xs:annotation>
					<xs:documentation>Represents a quantity of hazardous material.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" default="0.0" name="amount" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The amount of hazardous material in the specified units.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unit" type="xs:string">
						<xs:annotation>
							<xs:documentation>The units of the hazardous material quantity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>A string representation of the hazardous material quantity. Units may also be present in the string.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="NameAddress">
				<xs:annotation>
					<xs:documentation>Represents a name and address.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="company" type="xs:string">
						<xs:annotation>
							<xs:documentation>The company name associated with the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="contact" type="xs:string">
						<xs:annotation>
							<xs:documentation>The contact name associated with the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="address1" type="xs:string">
						<xs:annotation>
							<xs:documentation>The first street address line of the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="address2" type="xs:string">
						<xs:annotation>
							<xs:documentation>The second street address line of the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="address3" type="xs:string">
						<xs:annotation>
							<xs:documentation>The third street address line of the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="city" type="xs:string">
						<xs:annotation>
							<xs:documentation>The city name of the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="stateProvince" type="xs:string">
						<xs:annotation>
							<xs:documentation>The state, province, or county of the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="postalCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>The postal code of the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="countrySymbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>The ConnectShip symbolic name of the address country or territory.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="countryCode">
						<xs:annotation>
							<xs:documentation>The ISO 3166 alpha-2 country code of the address.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="[a-zA-Z][a-zA-Z]"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element minOccurs="0" name="altCountryName" type="xs:string">
						<xs:annotation>
							<xs:documentation>The alternate name of the address country.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="phone" type="xs:string">
						<xs:annotation>
							<xs:documentation>The phone number associated with the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="fax" type="xs:string">
						<xs:annotation>
							<xs:documentation>The fax number associated with the address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sms" type="xs:string">
						<xs:annotation>
							<xs:documentation>The SMS (text) number associated with the address contact.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="residential" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates the address is a residential address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="poBox" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates the address is a PO box.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="cassCertified" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates the address is USPS CASS certified.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="SimpleNameAddress">
				<xs:annotation>
					<xs:documentation>Represents a name and address. It does not provide the same level of validation as the NameAddress element.</xs:documentation>
				</xs:annotation>
				<xs:complexContent mixed="false">
					<xs:extension base="amp:NameAddress"/>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="PrintArea">
				<xs:annotation>
					<xs:documentation>Represents a printable area on a stock</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" default="0" name="width" type="xs:int">
						<xs:annotation>
							<xs:documentation>The width of the printable area in 1/1000 inches.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="height" type="xs:int">
						<xs:annotation>
							<xs:documentation>The height of the printable area in 1/1000 inches.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="horizontalOffset" type="xs:int">
						<xs:annotation>
							<xs:documentation>The offset of the printable area from the left edge of the stock in 1/1000 inches.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="verticalOffset" type="xs:int">
						<xs:annotation>
							<xs:documentation>The offset of the printable area from the bottom edge of the stock in 1/1000 inches.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="orientation" type="xs:int">
						<xs:annotation>
							<xs:documentation>The orientation of the printable area in clockwise degrees (0, 90, 180, 270).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="frontFace" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates that the printable area is on the front face of the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="backFace" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates that the printable area is on the back face of the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="ShipperInformation">
				<xs:annotation>
					<xs:documentation>Shipper information.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element name="id" type="xs:int">
						<xs:annotation>
							<xs:documentation>Id of the shipper.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="abbreviation" type="xs:string">
						<xs:annotation>
							<xs:documentation>Abbreviation of the shipper.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="address" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Address of the shipper.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="PrintAreaList">
				<xs:annotation>
					<xs:documentation>List of printable areas on a stock.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="area" type="amp:PrintArea"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="StockDescriptor">
				<xs:annotation>
					<xs:documentation>Printer stock descriptor.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="symbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>The symbolic name of the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The friendly name of the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="width" type="xs:int">
						<xs:annotation>
							<xs:documentation>The width of the stock in 1/1000 inches.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="height" type="xs:int">
						<xs:annotation>
							<xs:documentation>The height of the stock in 1/1000 inches.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="topFirst" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the stock is ejected from the printer top-first.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="printAreas" type="amp:PrintAreaList">
						<xs:annotation>
							<xs:documentation>List of printable areas on the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="rfidTransponderInfo" type="amp:TransponderInfo">
						<xs:annotation>
							<xs:documentation>RFID transponder information for the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="TransponderInfo">
				<xs:annotation>
					<xs:documentation>RFID transponder information.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" default="0" name="type" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The type of RFID transponder - see TransponderType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="frequency" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The frequency of RFID transponder - see TransponderFrequency enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="capacity" type="xs:int">
						<xs:annotation>
							<xs:documentation>The capacity of RFID transponder.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="Volume">
				<xs:annotation>
					<xs:documentation>Represents a volume amount.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" default="0.0" name="amount" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The volume amount in the specified units.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unit">
						<xs:annotation>
							<xs:documentation>The units for the volume amount (l).</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="(l|L)"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element minOccurs="0" name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>A string representation of the volume. Units (l) may also be present in the string.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="Weight">
				<xs:annotation>
					<xs:documentation>Represents a weight value.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" default="0.0" name="amount" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>Weight amount in the specified units.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unit">
						<xs:annotation>
							<xs:documentation>Units for the weight amount (lb, kg).</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="((l|L)(b|B))|((k|K)(g|G))"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element minOccurs="0" name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>A string representation of the weight value. Units (lb, kg) may also be present in the string. In some cases, variations of these units may also be acceptable.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="Holiday">
				<xs:annotation>
					<xs:documentation>Represents a holiday value.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="1" name="friendlyName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Holiday friendly name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="symbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>Holiday symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="holidayDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>Holiday date.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:simpleType name="enumItem">
				<xs:annotation>
					<xs:documentation>Enumeration value. May be specified as the integer value or the string name of the enumeration. The type prefix on the string value is optional.</xs:documentation>
				</xs:annotation>
				<xs:union>
					<xs:simpleType>
						<xs:restriction base="xs:int"/>
					</xs:simpleType>
					<xs:simpleType>
						<xs:restriction base="xs:string"/>
					</xs:simpleType>
				</xs:union>
			</xs:simpleType>
			<xs:simpleType name="enumList">
				<xs:annotation>
					<xs:documentation>List of enumeration values.</xs:documentation>
				</xs:annotation>
				<xs:list itemType="amp:enumItem"/>
			</xs:simpleType>
			<xs:complexType name="CollectionBase">
				<xs:annotation>
					<xs:documentation>Base type for item collections</xs:documentation>
				</xs:annotation>
			</xs:complexType>
			<xs:complexType name="List">
				<xs:annotation>
					<xs:documentation>Generic list of items.</xs:documentation>
				</xs:annotation>
				<xs:complexContent mixed="false">
					<xs:extension base="amp:CollectionBase">
						<xs:sequence>
							<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="xs:anyType">
								<xs:annotation>
									<xs:documentation>List item.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DictionaryItem">
				<xs:annotation>
					<xs:documentation>Item in a generic dictionary.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="key" type="xs:string">
						<xs:annotation>
							<xs:documentation>Key of the dictionary item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="value" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>Value of the dictionary item.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="Dictionary">
				<xs:annotation>
					<xs:documentation>Generic dictionary of items.</xs:documentation>
				</xs:annotation>
				<xs:complexContent mixed="false">
					<xs:extension base="amp:CollectionBase">
						<xs:sequence>
							<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:DictionaryItem">
								<xs:annotation>
									<xs:documentation>Key/value item in the dictionary.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="StringList">
				<xs:annotation>
					<xs:documentation>List of string elements.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="xs:string">
						<xs:annotation>
							<xs:documentation>String item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="IntegerList">
				<xs:annotation>
					<xs:documentation>List of integer items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="xs:int">
						<xs:annotation>
							<xs:documentation>Integer item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="IdentityList">
				<xs:annotation>
					<xs:documentation>List of identity elements.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:Identity">
						<xs:annotation>
							<xs:documentation>Identity item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="DataDictionaryList">
				<xs:annotation>
					<xs:documentation>List of data dictionaries.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Data dictionary item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="Commodity">
				<xs:annotation>
					<xs:documentation>Elements that represent a commodity item in a shipment.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="approvedCommunityMemberNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Approved Community Member Number for ITAR license exemption.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="certOfOriginMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which method will be used to provide the Certificate of Origin - see COMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="commodityCondition" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates the condition of the commodity - see CommodityCondition enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ddtcEligibleParty" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' to certify the exporter meets ITAR criteria and all parties are eligible to receive USML items under the ITAR.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ddtcQuantity" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number of units that correspond to the DDTC measure reported for this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ddtcRegistrationNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The exporter's DDTC registration number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ddtcSme" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if some or all of the articles to be exported warrant special export controls because of their capacity for substantial military utility or capability.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ddtcUnitMeasure" type="xs:string">
						<xs:annotation>
							<xs:documentation>The unit of measure for the article being shipped as stated on the license or other export authorization.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ddtcUsmlCategoryCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>The DDTC U.S. Munitions List (USML) category of articles, service, or related technical data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="description" type="xs:string">
						<xs:annotation>
							<xs:documentation>Description of package or package contents.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eccn" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Export Commodity Control Number for this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportHarmonizedCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Code used by customs in the exporting country (or territory) to identify the commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportInformationCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>A code that defines the type of shipment for export purpose.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportQuantity1" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The first alternate number of units of this commodity (for export documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportQuantity2" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The second alternate number of units of this commodity (for export documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportQuantityUnitMeasure1" type="xs:string">
						<xs:annotation>
							<xs:documentation>Identifies the first alternate quantity's unit of measure (for export documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportQuantityUnitMeasure2" type="xs:string">
						<xs:annotation>
							<xs:documentation>Identifies the second alternate quantity's unit of measure (for export documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="harmonizedCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Code used by customs in the exporting country or territory to identify the commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="licenseExpirationDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>Indicates the expiration date of the export license for this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="licenseNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Contains a validated license number or license exemption number for this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="licenseType" type="xs:string">
						<xs:annotation>
							<xs:documentation>A code indicating license type (or exception/exemption) applicable to this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="licenseUnitValue" type="amp:Money">
						<xs:annotation>
							<xs:documentation>The per-unit value of the commodity as it applies to the export license.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="manufacturerId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Manufacturer Identification Code (MID) for this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="naftaPreferenceCriterion" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Identifies which of the NAFTA tariff preference criteria (A-F) apply to this commodity - see NAFTAPreferenceCriterion enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="naftaProducer" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Identifies which of the NAFTA producer indicators apply to this commodity - see NAFTAProducer enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="naftaRvcAvgEndDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>The end date of the period when calculating NAFTA RVC using an average over a time period.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="naftaRvcAvgStartDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>The start date of the period when calculating NAFTA RVC using an average over a time period.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="naftaRvcMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Identifies which of the NAFTA regional value content (RVC) calculation methods apply to this commodity - see NAFTARVCMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="origin" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The name/address of origin or manufacture of this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="originCountry" type="xs:string">
						<xs:annotation>
							<xs:documentation>Country (or territory) of origin or manufacture of this commodity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="originDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Origin description of package or package contents.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="originTaxId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The tax id of the manufacturer or producer for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="productCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Product identifier for use by the shipper and carrier (such as part number or SKU).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="quantity" type="xs:int">
						<xs:annotation>
							<xs:documentation>The number of units of this commodity (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="quantityUnitMeasure" type="xs:string">
						<xs:annotation>
							<xs:documentation>Identifies the quantity's unit of measure (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="restrictedArticleType" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>Indicates the commodity is some type of Restricted Article - see RestrictedArticleType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sedMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which method will be used to provide the US EEI/SED or Canada B13A - see SEDMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unitValue" type="amp:Money">
						<xs:annotation>
							<xs:documentation>The per unit value of this commodity for customs purposes (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unitWeight" type="amp:Weight">
						<xs:annotation>
							<xs:documentation>The per unit weight this commodity (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData1" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #1.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData2" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData3" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData4" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #4.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData5" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #5.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="CommodityList">
				<xs:annotation>
					<xs:documentation>List of commodity contents.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:Commodity">
						<xs:annotation>
							<xs:documentation>Commodity item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="HazmatItem">
				<xs:annotation>
					<xs:documentation>Elements that represent a hazardous material item in a shipment.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="hazmat500kgExemption" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a 500 kg exemption applies to the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatAccessible" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the Hazardous Material must remain accessible.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatCargo" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the Hazardous Material must be shipped via cargo aircraft only (as opposed to passenger or cargo aircraft).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatCaCategory" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Hazardous Material Category - see HazMatCACategory enumeration (Only applicable in Canada - Deprecated).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatClass" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Hazard Class or Division.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Proper Shipping Name (description) of the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatEmergencyContact" type="xs:string">
						<xs:annotation>
							<xs:documentation>Emergency contact name or contract number for the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatEmergencyPhone" type="xs:string">
						<xs:annotation>
							<xs:documentation>Emergency contact phone number for the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatExceptedQuantity" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the Hazardous Material is an Excepted Quantity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatExNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The EX (Explosives) number for the Hazardous Material (begins with "EX-").</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The U.S. Dept. of Transportation (DOT) Hazardous Material Identification / UN Number for the contents of the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatInfectiousResponsibleParty" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Person or party responsible for the infectious substance shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatLabel" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>The required labels for the Hazardous Material - see HazMatLabel enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatLimitedQuantity" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a limited quantity exemption applies to the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatPacking" type="xs:string">
						<xs:annotation>
							<xs:documentation>The type of material or container used to pack the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatPackingGroup" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The packing group of the Hazardous Material - see HazMatPackingGroup enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatPackingInstruction" type="xs:string">
						<xs:annotation>
							<xs:documentation>The IATA DGR Packing Instruction for the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatPercentage" type="xs:string">
						<xs:annotation>
							<xs:documentation>Hazardous Material concentration percentage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatQuantity" type="amp:HazmatQuantity">
						<xs:annotation>
							<xs:documentation>The mass (weight) or capacity (volume) of the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactiveActivity" type="amp:HazmatQuantity">
						<xs:annotation>
							<xs:documentation>Activity of the radioactive material being shipped, typically measured in becquerels.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactiveChemicalForm" type="xs:string">
						<xs:annotation>
							<xs:documentation>Chemical form of the radioactive material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactiveCsi" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The calculated criticality safety index of the fissile material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactiveException" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Exception that the radioactive material is shipped with - see HazMatRadioactiveException enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactiveName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Name of the radioactive material being shipped.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactivePackaging" type="xs:string">
						<xs:annotation>
							<xs:documentation>Radioactive packaging type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactivePhysicalForm" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Physical form of the radioactive material - see HazMatPhysicalForm enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactiveSurfaceReading" type="amp:HazmatQuantity">
						<xs:annotation>
							<xs:documentation>Surface reading of the radioactive material in mSv/hr or mrem/hr.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRadioactiveTransportIndex" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>Transport index of the radioactive material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatReference" type="xs:string">
						<xs:annotation>
							<xs:documentation>Miscellaneous reference field for the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRegulation" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Identifies how the Hazardous Material is regulated - see HazMatRegulation enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatRegulationSet" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The Hazardous Material regulation set/identifier - see HazMatRegulationSet enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatReportableQuantity" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the Hazardous Material is in a quantity that meets or exceeds the reportable quantity limit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatSpecialProvisions" type="xs:string">
						<xs:annotation>
							<xs:documentation>Comma-separated list of DOT Special Permit numbers or IATA Special Provisions.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatSubsidiaryRiskClass" type="xs:string">
						<xs:annotation>
							<xs:documentation>The class or division number of any important subsidiary risks.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatTechnicalName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Technical name of the Hazardous Material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatTransportCategory" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates the degree of danger for the hazardous material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatTunnelRestrictionCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Code representing restrictions for hazardous materials transportation through tunnels.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData1" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #1.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData2" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData3" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData4" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #4.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData5" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #5.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="HazmatItemList">
				<xs:annotation>
					<xs:documentation>List of hazardous material contents.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:HazmatItem">
						<xs:annotation>
							<xs:documentation>Hazardous material item item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="AlcoholItem">
				<xs:annotation>
					<xs:documentation>Elements that represent an alcoholic beverage item in a shipment.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="alcoholPackaging" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The packaging type of this particular alcohol content's container - see AlcoholPackaging enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="alcoholQuantity" type="xs:int">
						<xs:annotation>
							<xs:documentation>The number of containers of this particular alcohol content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="alcoholRecipientType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The recipient type of alcohol - see AlcoholRecipientType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="alcoholType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The type of alcohol - see AlcoholType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="alcoholVolume" type="amp:Volume">
						<xs:annotation>
							<xs:documentation>The total volume of this particular alcohol content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData1" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #1.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData2" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData3" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData4" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #4.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData5" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #5.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
			</xs:complexType>
			<xs:complexType name="AlcoholItemList">
				<xs:annotation>
					<xs:documentation>List of alcoholic beverage contents.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:AlcoholItem">
						<xs:annotation>
							<xs:documentation>Alcoholic beverage content item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="DataDictionary">
				<xs:annotation>
					<xs:documentation>Elements that represent a package or container in a shipment.</xs:documentation>
				</xs:annotation>
				<xs:all>
					<xs:element minOccurs="0" name="additionalHandling" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the shipment size or packaging requires additional handling.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="additionalHandlingFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Additional Handling.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="additionalHandlingType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which type of additional handling the package or item requires - see AdditionalHandlingType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="additionalHardcopyDocumentation" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the shipment is tendered with hardcopy export documentation in addition to any electronic documentation information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="addressChangeNotification" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the shipper should receive notification of address changes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="adultMinimumAge" type="xs:short">
						<xs:annotation>
							<xs:documentation>Minimum age of adult required depending on service or feature requirement.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="aesTransactionNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Number or identifier for the AES or CAED transaction (primarily for documentation purposes).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="airFreightFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Air Freight.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="alcoholContents" type="amp:AlcoholItemList">
						<xs:annotation>
							<xs:documentation>Information about the Alcohol contained in the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="appointmentDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for the carrier to schedule an appointment for package delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="appointmentDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Appointment Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="apportionedBase" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Base charge apportioned to the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="apportionedDiscount" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Total discounts apportioned to the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="apportionedSpecial" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Total of all additional fees, charges, taxes, etc... apportioned to the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="apportionedTotal" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Total charge apportioned to the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="arriveDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>The expected arrival date based on the carrier's delivery commitment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="barCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Bar code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="barCodeBinary" type="xs:base64Binary">
						<xs:annotation>
							<xs:documentation>Bar code. (Binary)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="barCode2" type="xs:string">
						<xs:annotation>
							<xs:documentation>Bar code 2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="barCode2Binary" type="xs:base64Binary">
						<xs:annotation>
							<xs:documentation>Bar code 2. (Binary)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="barCode3" type="xs:string">
						<xs:annotation>
							<xs:documentation>Bar code 3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="barCode3Binary" type="xs:base64Binary">
						<xs:annotation>
							<xs:documentation>Bar code 3. (Binary)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="base" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Base charge.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="billingFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Special Billing options.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="bolComment" type="xs:string">
						<xs:annotation>
							<xs:documentation>Additional comments or description to appear on Bill of Lading.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="bolLegalStatement" type="xs:string">
						<xs:annotation>
							<xs:documentation>Legal statement to appear on Bill of Lading which overrides any default statement on the document.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="borderProcessingFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee associated with border processing/crossing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="brokerageMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which brokerage method should be used - see BrokerageMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="brokerageThirdPartyBilling" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier-provided brokerage services are being billed to a third party.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="brokerageThirdPartyBillingAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>The third party account number used for billing carrier-provided brokerage services.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="brokerageThirdPartyBillingAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The address of the third party for billing carrier-provided brokerage services.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="bundleId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number which uniquely identifies each bundle.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="bundleIdList" type="amp:IntegerList">
						<xs:annotation>
							<xs:documentation>List of Bundle IDs.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="calltag" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package is a Call Tag (origin/destination reversed as with return delivery).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="calltagFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Call Tag.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="calltagNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Call Tag number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carbonNeutral" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the carrier will offset the carbon produced during transportation and processing of the shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carbonNeutralFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Carbon Neutral shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrierCostSurcharge" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Carrier Cost Surcharge.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrierInstructions" type="xs:string">
						<xs:annotation>
							<xs:documentation>Instructions (shipping, billing, ...) for the carrier.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrierMonitoring" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the carrier should actively monitor the package's progress.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrierMonitoringFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for active carrier monitoring.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrierMonitoringPurpose" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>The purpose for carrier monitoring - see CarrierMonitoringPurpose enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrierName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier name for documentation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrierTenderMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which carrier supported method will be used to tender packages - see CarrierTenderMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="certifiedMail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for Certified Mail (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="certifiedMailFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Certified Mail (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="certOfOriginMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which method will be used to provide the Certificate of Origin - see COMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="chainOfSignature" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide chain of signature and associated security.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="chainOfSignatureFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for chain of signature.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="chargesOnDocumentation" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates if carriage charges should be displayed on certain documents - see ChargesOnDocumentation enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codAlternateNumber" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the C.O.D. identifier is a shipper-assigned alternate, 'false' if it is carrier-assigned.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codAmount" type="amp:Money">
						<xs:annotation>
							<xs:documentation>The amount of the C.O.D..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for C.O.D..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codInstructions" type="xs:string">
						<xs:annotation>
							<xs:documentation>Instructions for the carrier relating to the collection of the C.O.D..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codMasterTrackingNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>C.O.D. Master Tracking number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates the type of C.O.D. service - see CODMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The carrier-assigned or shipper-assigned C.O.D. identifier.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codPaymentMethod" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>Acceptable methods for C.O.D. collection/payment - see CODPaymentMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="codPaymentMethodPostDatedCheckDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>If post-dated business or personal checks are used as the C.O.D. collection/payment method, this is the date that is expected to appear on the post-dated check.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codPayorAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email address of the party paying the C.O.D..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codPayorInstructions" type="xs:string">
						<xs:annotation>
							<xs:documentation>Instructions for the party paying the C.O.D..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codPendingFeePayorPercentage" type="xs:string">
						<xs:annotation>
							<xs:documentation>Percentage of the C.O.D. fees that are yet to be determined that the party paying the C.O.D. is responsible for.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codReturnAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Address where carrier may return C.O.D. in lieu of Shipper's Address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codReturnMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates method of C.O.D. return from the carrier to the shipper - see CODReturnMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="codReturnTrackingNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>C.O.D. Return Tracking number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="comments" type="xs:string">
						<xs:annotation>
							<xs:documentation>Comments (such as additional commercial invoice comments).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="commerceType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The commerce type describing the relationship and roles of the parties in the transaction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="commercialInvoiceMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which method will be used to provide the Commercial Invoice - see CommercialInvoiceMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="commitmentCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier assigned code associated with the delivery commitment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="commodityClass" type="xs:string">
						<xs:annotation>
							<xs:documentation>The NMFC commodity class.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="commodityCondition" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates the condition of the commodity - see CommodityCondition enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="commodityContents" type="amp:CommodityList">
						<xs:annotation>
							<xs:documentation>Information about the commodities contained in the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consignee" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The consignee (destination) name/address (origin if return delivery).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>The consignee's carrier account number (for billing).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeBillingId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Consignee Billing ID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>A unique identifier for the consignee (such as an identifier from a consignee database).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeCustomsId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The consignee's identification number for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>The consignee's email address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeReference" type="xs:string">
						<xs:annotation>
							<xs:documentation>Package identifier for use by the shipper and consignee (such as P.O. number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeTaxId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Consignee Tax ID for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeTaxIdType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Consignee Tax ID type - see TaxNumberType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeThirdPartyBilling" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the consignee's portion of the charges will be paid by a third party.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeThirdPartyBillingAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>The carrier account number of the third party for the consignee's portion (for billing).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consigneeThirdPartyBillingAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The address of the third party for the consignee's portion.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consolidationCarrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>The name or SCAC of the carrier that will transport the consolidated movement.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consolidationCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>A unique user-defined identifier for a consolidation group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consolidationFlag" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package is part of a consolidated movement.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consolidationId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number which uniquely identifies each consolidation group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consolidationShipmentId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Consolidation product-specific unique identifier for the consolidated movement.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consolidationTrackingNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Consolidation tracking number for the consolidated movement.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consolidationType" type="xs:string">
						<xs:annotation>
							<xs:documentation>Code that identifies the consolidation product to use.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="containerCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>A unique identifier for a container.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="customsBroker" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The customs broker name/address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="customsBrokerCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>A unique identifier for the customs broker.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="cycleCount" type="xs:int">
						<xs:annotation>
							<xs:documentation>Cycle Count (FedEx only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="declaredValueAmount" type="amp:Money">
						<xs:annotation>
							<xs:documentation>The value of the package for carrier loss protection purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="declaredValueCustoms" type="amp:Money">
						<xs:annotation>
							<xs:documentation>The value of the package for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="declaredValueFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Loss Protection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deconsolidationCarrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>The name of the carrier that will handle the shipment after deconsolidation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryAreaCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the delivery area code used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryExceptionNotification" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide delivery exception notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryExceptionNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send delivery exception notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryExceptionNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with delivery exception notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryExceptionNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide delivery exception notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryExceptionNotificationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Delivery Exception Notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryExceptionNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the delivery exception notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryExceptionNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with delivery exception notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which delivery method should be used - see DeliveryMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>Account to receive the delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Name/address information (such as company, contact, phone or fax) to which delivery notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide delivery notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Delivery Notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationFile" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide delivery notification via file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationPhone" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide delivery notification via Phone.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationSms" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide delivery notification via SMS.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryNotificationVerbal" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should notify verbally about delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliveryWindowFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for specific delivery date/time criteria.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="deliverToDoor" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package should be delivered to the recipient's address instead of to a community or carrier location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="description" type="xs:string">
						<xs:annotation>
							<xs:documentation>Description of package or package contents.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="destinationAirportCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Destination airport code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dimension" type="amp:Dimensions">
						<xs:annotation>
							<xs:documentation>Dimensions of the entire package or container.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dimensionalWeightRated" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a dimensional weight was used in rating.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="directDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package must be delivered directly to the specified person.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="directDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Direct Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="discount" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Total discounts.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dispositionMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates how undeliverable packages should be handled - see DispositionMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="distributionCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier code that identifies how/where the package will be segregated/staged/loaded for pickup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="documentationConsignee" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The consignee (destination) name/address for the shipment documentation (such as UPS World Ease Doc Box).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="documentationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if Carrier prepares documentation (usually for International) that accompanies the shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="documentsOnly" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package contains only non-dutiable documents.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="dropoffAppointmentDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>The date for a scheduled drop-off appointment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dropoffAppointmentNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The number provided by the carrier for a scheduled drop-off appointment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="00:00:00" name="dropoffAppointmentTime" type="xs:time">
						<xs:annotation>
							<xs:documentation>The time for a scheduled drop-off appointment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dryIceFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Dry Ice.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dryIcePurpose" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The purpose of the dry ice in the package - see DryIcePurpose enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dryIceRegulationSet" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The Dry Ice regulation set/identifier - see DryIceRegulationSet enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dryIceWeight" type="amp:Weight">
						<xs:annotation>
							<xs:documentation>The weight of the dry ice in the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="dutyFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Duty.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="earliestDeliveryDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>The date before which the carrier should not attempt delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="00:00:00" name="earliestDeliveryTime" type="xs:time">
						<xs:annotation>
							<xs:documentation>The time before which the carrier should not attempt delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="earlyDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Early Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eeiNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send electronic export information filing notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eeiNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with electronic export information filing notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eeiNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide electronic export information filing notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eeiNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the electronic export information filing notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eeiNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with electronic export information filing notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="entryNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The import entry or in-bond number for the shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eveningDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for the carrier to deliver typically residential package in the evening.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="eveningDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Evening Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exchange" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' to indicate the package will be Returns Exchange.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exchangeFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Returns Exchange.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exchangeMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which method will be used for the merchandise exchange - see ExchangeMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exporter" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The exporter name/address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exporterAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>The exporter carrier account number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exporterCustomsId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The exporter identification number for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exporterEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>The exporter's email address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exporterTaxId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Exporter Tax ID for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportDeclarationStatement" type="xs:string">
						<xs:annotation>
							<xs:documentation>Export declaration statement (may be used as alternative declaration text on some export documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportInformationCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>A code that defines the type of shipment for export purpose.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exportReason" type="xs:string">
						<xs:annotation>
							<xs:documentation>Reason for package export for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="extendedAreaFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for extended or unusual area package destination.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="flats" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if packaging qualifies as a Flat (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="forkliftDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a forklift is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="forkliftDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a forklift is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="forkliftPickup" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a forklift is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="forkliftPickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a forklift is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="forwardingAgent" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The forwarding agent name/address (for export documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="forwardingAgentTaxId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Forwarding agent Tax ID for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ftzIdentifier" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Foreign Trade Zone identifier from which the merchandise was withdrawn.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="fuelSurcharge" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fuel surcharge.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="goodsInFreeCirculation" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package contains only goods in free circulation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="goodsOrigin" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Origination location of the goods for export reporting.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="groundsaver" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package qualifies for GroundSaver (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Name/address information (such as company, contact, phone or SMS) to which hold at location notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send hold at location notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with hold at location notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide hold at location notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationLocale" type="xs:language">
						<xs:annotation>
							<xs:documentation>Indicates the locale of the hold at location notification recipient.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationPhone" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide hold at location notification via phone.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the hold at location notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationSms" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide hold at location notification via SMS.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="halNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with hold at location notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="handlingUnitCount" type="xs:int">
						<xs:annotation>
							<xs:documentation>Total number of handling units for freight movements.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmat" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package contains Hazardous Materials, Dangerous Goods, or Other Regulated Materials.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatAllPackedInOne" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if all the Hazardous Materials are packed together in the same packaging.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatContents" type="amp:HazmatItemList">
						<xs:annotation>
							<xs:documentation>Information about the Hazardous Materials, Dangerous Goods, or Other Regulated Materials contained in the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Hazardous Materials.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatHandlingInformation" type="xs:string">
						<xs:annotation>
							<xs:documentation>The additional handling information for the Hazardous Materials.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatOverpack" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the different Hazardous Materials contained in a package are packed in separate overpack packaging.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatQValue" type="xs:decimal">
						<xs:annotation>
							<xs:documentation>The calculated Q-Value of the package containing different types of Hazardous Materials packed together.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatSignatoryAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Name/address information (such as contact or city) of the signatory for the Hazardous Materials.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hazmatSignatoryTitle" type="xs:string">
						<xs:annotation>
							<xs:documentation>Title of the signatory for the Hazardous Materials.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="healthInsurance" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if package requires an associated health insurance fee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="healthInsuranceFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Health insurance fee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="helperDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a helper is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="helperDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a helper is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="helperPickup" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a helper is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="helperPickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a helper is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holdAtLocation" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package should be held by the carrier.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holdAtLocationAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The address at which a package should be held.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holdAtLocationFacilityId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The carrier's facility id for the hold location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holdAtLocationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Hold At Location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holdAtLocationReleaseCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Package release code for hold at location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holdAtLocationType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The type of hold at location - see HoldLocationType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holidayDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for holiday delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holidayDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Holiday Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="holidayPickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Holiday Pickup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hubCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Hub code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hundredweightRated" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if Hundredweight Rating was used (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="icodNotificationAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Name/address information (such as company, contact, phone or SMS) to which import C.O.D. consignee notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="icodNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send import C.O.D. consignee notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="icodNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with import C.O.D. consignee notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="icodNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide import C.O.D. consignee notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="icodNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the import C.O.D. consignee notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="icodNotificationSms" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide import C.O.D. consignee notification via SMS.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="impbNonComplianceFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Nonmachinable Mail (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="importerOfRecord" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The importer of record name/address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="importerOfRecordAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>The importer of record carrier account number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="importerOfRecordCustomsId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The importer of record identification number for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="importerOfRecordEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>The importer of record email address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="importerOfRecordTaxId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Importer of Record Tax ID for customs purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="importDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' to indicate package will be delivered from the specified origin address (in a country or territory different than the shipper) to the consignee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="inbondCode" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates if the shipment is moving through a country or territory under bond - see InbondCode enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="insideDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if inside delivery beyond the loading area is required.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="insideDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Inside Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="insidePickup" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if inside pickup beyond the pickup area is required.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="insidePickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Inside Pickup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="insuranceMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which type of loss protection or insurance will be used - see InsuranceMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="invoiceDiscount" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Discounts/rebates (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="invoiceFreight" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Freight charges (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="invoiceInsuranceFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Insurance fees (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="invoiceOtherFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Other charges (for documentation such as commercial invoice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="inTransitNotification" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide in-transit notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="inTransitNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send in-transit notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="inTransitNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with in-transit notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="inTransitNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide in-transit notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="inTransitNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the in-transit notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="inTransitNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with in-transit notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="isoUniqueIdentifier" type="xs:string">
						<xs:annotation>
							<xs:documentation>A unique identifier for use in supply chains as defined in ISO/IEC 15459, such as a license plate, or a unique identifier for a transport unit or item..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="itemNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The NMFC item number assigned by commodity type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="largePackage" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package meets the carrier's definition of a large package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="largePackageFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for a large package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="largePallet" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package meets the carrier's definition of a large pallet.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="largePalletFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for a large pallet.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="latestDeliveryDate" type="xs:date">
						<xs:annotation>
							<xs:documentation>The date after which the carrier should not attempt delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="00:00:00" name="latestDeliveryTime" type="xs:time">
						<xs:annotation>
							<xs:documentation>The time after which the carrier should not attempt delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="licenseVerificationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for License Verification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="liftgateDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a liftgate is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="liftgateDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a liftgate is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="liftgatePickup" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a liftgate is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="liftgatePickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a liftgate is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="lithiumBatteriesContainedInEquipment" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if lithium batteries are contained in equipment. 'false' if lithium batteries are contained outside of equipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="locationId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Location ID for delivery point.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="lowValueTaxId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Tax ID for low-value goods based on final destination country rules.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="markings" type="xs:string">
						<xs:annotation>
							<xs:documentation>Marks, numbers, symbols or other identification shown on the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="maxicode" type="amp:StringList">
						<xs:annotation>
							<xs:documentation>List of strings that comprise the MaxiCode (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="miscReference1" type="xs:string">
						<xs:annotation>
							<xs:documentation>Miscellaneous package identifier #1.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="miscReference2" type="xs:string">
						<xs:annotation>
							<xs:documentation>Miscellaneous package identifier #2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="miscReference3" type="xs:string">
						<xs:annotation>
							<xs:documentation>Miscellaneous package identifier #3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="miscReference4" type="xs:string">
						<xs:annotation>
							<xs:documentation>Miscellaneous package identifier #4.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="miscReference5" type="xs:string">
						<xs:annotation>
							<xs:documentation>Miscellaneous package identifier #5.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="mms" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package will be manifested (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="mmsPieceId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Package ID (US Postal Service - may be included as part of a tracking number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="msn" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number which uniquely identifies every package known to Progistics.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="multiPieceFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Multi Piece Shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nahHalNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send not at home hold at location notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nahHalNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with not at home hold at location notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nahHalNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide not at home hold at location notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nahHalNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of not at home hold at location notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="neutralDeliveryService" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if requesting Neutral Delivery Service (DHL only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="neutralDeliveryServiceFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Neutral Delivery Service (DHL only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nofnSequence" type="xs:int">
						<xs:annotation>
							<xs:documentation>Sequence number of this item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nofnSequenceBundle" type="xs:int">
						<xs:annotation>
							<xs:documentation>Sequence number of this package in the bundle.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nofnTotal" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number of items in the sequence.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nofnTotalBundle" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number of packages in the bundle.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nonhazardousLithiumBatteries" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if package contains lithium metal or lithium ion batteries that do not qualify as dangerous goods.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nonmachinableMail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if meets criteria for a package that cannot be processed with automation equipment (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nonmachinableMailFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Nonmachinable Mail (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nonrectangular" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the parcel is nonrectangular (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nonstandardMail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if meets criteria for a very light package with unusually large dimensions (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="nonstandardMailFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Nonstandard Mail (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="notificationFailureAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send notification failure notifications.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="notFlatMachinable" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if piece meets the requirements for Not Flat-Machinable (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="offshoreFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Offshore delivery/pickup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="originatorShipdate" type="xs:date">
						<xs:annotation>
							<xs:documentation>Ship date of the original package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="originatorTrackingNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Tracking number of the package that was the originator/impetus for this package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="originAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The origin name/address (destination if return delivery) - see CategoryPropertyID enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="originDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Origin description of package or package contents.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="otherCharges" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>A dictionary of money objects that a component may return which are not in the transAPI Dictionary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="oversize" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package meets the carrier's definition of an oversized package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="oversizeFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Oversize.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="overDimensionFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for over dimension or extreme length.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packageListId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number which uniquely identifies every package list submitted to Progistics.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packaging" type="xs:string">
						<xs:annotation>
							<xs:documentation>The type of packaging for the package or container.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packagingDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Description of the packaging type or material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packagingTareWeight" type="amp:Weight">
						<xs:annotation>
							<xs:documentation>Weight of the package or container without any pieces in or on it (tare/packaging/empty weight).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="palletFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fees, costs, handling charges, ... for the pallet.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="palletJackDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a pallet jack is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="palletJackDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a pallet jack is required to deliver the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="palletJackPickup" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a pallet jack is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="palletJackPickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if a pallet jack is required to pick up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="parcelAirlift" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for Parcel Airlift (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="parcelAirliftFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Parcel Airlift (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="parentContainer" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Information about the container that the package or container is in.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="parentContainerCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Identifies the Container Code of the container the package or container is in, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="partiesRelated" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the parties to the transaction (shipper and consignee) are related.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="pharmacyDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a shipment is delivered directly to a pharmacy.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="00:00:00" name="pickupTime" type="xs:time">
						<xs:annotation>
							<xs:documentation>Time of day that the shipment will be ready for pickup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="pieceCount" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number of pieces in the package or container.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="pieceCountFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee assessed based on the number of pieces.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="poaIncluded" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a one-time POA (Power of Attorney) is included with the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="portOfEntry" type="xs:string">
						<xs:annotation>
							<xs:documentation>The entry port name and/or code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Name/address information (such as company, contact, phone or fax) to which pre-alert notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send pre-alert notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with pre-alert notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide pre-alert notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationLocale" type="xs:language">
						<xs:annotation>
							<xs:documentation>Indicates the locale of the pre-alert notification recipient.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationPhone" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide pre-alert notification via phone.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the pre-alert notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationSms" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide pre-alert notification via SMS.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="preAlertNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with pre-alert notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="priorDeliveryNotificationConsignee" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide notification to the consignee prior to delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="priorDeliveryNotificationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Prior Delivery Notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proactiveRecovery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the carrier should proactively initiate recovery procedures for at-risk shipments.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proactiveRecoveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for proactive carrier recovery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proactiveRecoveryInstructions" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>Recovery instructions to follow if the package becomes distress - see ProactiveRecoveryInstructions enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proactiveRecoveryType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Proactive recovery type as defined by the carrier - see ProactiveRecoveryType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proof" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package will require Proof of Delivery / AOD.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Proof of Delivery / AOD.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Package receipt confirmation number other than the one on the pre-printed Proof of Delivery tag.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofRequireSignature" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a signature is required as Proof of Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofRequireSignatureAdult" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if an adult's signature is required as Proof of Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofRequireSignatureConsignee" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if a signature from someone at the consignee's address is required as Proof of Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofRequireSignatureFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for requiring signature with Proof of Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofReturnOfDocuments" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the carrier should obtain a signature on an invoice or other document and return it to the shipper.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofSignatureWaiver" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the delivery employee may sign for the article if no one is available to accept the shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="proofUseAlternateNumber" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if an alternate control number will print on the Proof of Delivery tag.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ratedWeight" type="amp:Weight">
						<xs:annotation>
							<xs:documentation>Weight used for rating.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="rateCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the rate code used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="registeredMail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for Registered Mail (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="registeredMailFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Registered Mail (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="remoteOriginFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for unusual or remote package pickup location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="remotePassthrough" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>Component-specific data to pass through to the remote service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="residentialDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Residential Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="restrictedArticleType" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>Indicates the commodity is some type of Restricted Article - see RestrictedArticleType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="restrictedDestinationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for restricted destination.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>The 'From:' carrier account number (To: if return delivery).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Alternate 'From:' name/address (To: if return delivery) used on documentation (not available for all documents).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnAddressMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates from where the 'From:' name/address should be obtained - see ReturnAddressMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' to indicate package will be delivered from the consignee back to the shipper or specified origin address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email address to which carrier would send documentation (shipping label) for return or import delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryAddressEmailLocale" type="xs:language">
						<xs:annotation>
							<xs:documentation>Indicates the locale of the email recipient to which carrier would send documentation (shipping label) for return or import delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Return Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which return or import delivery method will be used - see ReturnDeliveryMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Name/address information (such as company, contact, phone or fax) to which return delivery notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationAddress2" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Second name/address information to which return delivery notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send return delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with return delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide notification via Email when a return delivery request is generated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationFax" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide notification via Fax when a return delivery request is generated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Return Delivery Notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name of to use as the sender of the return delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnDeliveryNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with return delivery notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnTrackingRetentionDays" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number of days the carrier retains tracking number for the returned package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="routedExportTransaction" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if forwarding or other agent is authorized to export the merchandise out of the United States.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="routingCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Routing code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="routingCode2" type="xs:string">
						<xs:annotation>
							<xs:documentation>Routing code 2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="routingCode3" type="xs:string">
						<xs:annotation>
							<xs:documentation>Routing code 3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="routingCode4" type="xs:string">
						<xs:annotation>
							<xs:documentation>Routing code 4.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="routingCode5" type="xs:string">
						<xs:annotation>
							<xs:documentation>Routing code 5.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sackLevel" type="xs:string">
						<xs:annotation>
							<xs:documentation>Level of sort used for sack or tray (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sackZip" type="xs:string">
						<xs:annotation>
							<xs:documentation>Destination for pre-sorted sack or tray (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="saleInTransit" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if requesting Sale In Transit (DHL only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="saturdayDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the carrier should deliver on Saturday.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="saturdayDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Saturday Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="saturdayPickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Saturday Pickup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="security" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if package requires an associated security fee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="securityFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Security fee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sedExemptionNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Contains the US Electronic Export Information (EEI/SED) FTR exemption number, or the Canada B13A exemption number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sedMethod" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates which method will be used to provide the US EEI/SED or Canada B13A - see SEDMethod enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="serialNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Serial number (such as meter serial number for US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="service" type="xs:string">
						<xs:annotation>
							<xs:documentation>Service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0001-01-01" name="shipdate" type="xs:date">
						<xs:annotation>
							<xs:documentation>The intended ship date.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>The shipper.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipperReference" type="xs:string">
						<xs:annotation>
							<xs:documentation>Package identifier for use by the shipper and carrier (such as invoice number or package ID).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Name/address information (such as company, contact, phone or fax) to which shipment notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationAddress2" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Second name/address information to which shipment notification would be sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationAddressEmail" type="xs:string">
						<xs:annotation>
							<xs:documentation>Email addresses (separated by , or ;) to which carrier would send shipment notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationAddressFax" type="xs:string">
						<xs:annotation>
							<xs:documentation>Fax number to which carrier would send shipment notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationDescription" type="xs:string">
						<xs:annotation>
							<xs:documentation>Message to be conveyed by carrier along with shipment notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationEmail" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide shipment notification via Email.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationFax" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should provide shipment notification via Fax.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Ship Notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationSenderName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Company or contact name to use as the sender of the shipment notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationSubjectText" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subject of the message to be conveyed by carrier along with shipment notification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipNotificationVerbal" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if carrier should notify verbally about shipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="signatureRelease" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the consignee's signature is on file with the carrier.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="special" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Total of all additional fees, charges, taxes, etc..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="specialDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for special delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="specialDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Special Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="stairDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if stairs are involved in delivering the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="stairDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if stairs are involved in delivering the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="stairPickup" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if stairs are involved in picking up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="stairPickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee if stairs are involved in picking up the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="subcategory" type="xs:string">
						<xs:annotation>
							<xs:documentation>Subcategory.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="subNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>The sub number to an NMFC item number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sundayDelivery" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' for Sunday delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sundayDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Sunday Delivery.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sundayPickupFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Sunday Pickup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="suppressDc" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' to suppress Delivery Confirmation (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="suppressMms" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' to suppress Manifest Mailing System (US Postal Service).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="tax" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Additional taxes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="temperatureControl" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates the type of temperature control service - see TemperatureControlType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="temperatureControlFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for Temperature Control service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="terminalHandlingFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Terminal Handling fee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="terms" type="xs:string">
						<xs:annotation>
							<xs:documentation>Payment terms / billing options (identifies who pays what portions of the carrier costs).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="termsOfSale" type="xs:string">
						<xs:annotation>
							<xs:documentation>Incoterm identifying terms of sale / delivery terms (typically appears on customs documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyBilling" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the shipper's portion of the charges will be paid by a third party.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyBillingAccount" type="xs:string">
						<xs:annotation>
							<xs:documentation>The carrier account number of the third party for the shipper's portion (for billing).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyBillingAddress" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The address of the third party for the shipper's portion.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyInsuranceAmount" type="amp:Money">
						<xs:annotation>
							<xs:documentation>The value of the package for third party insurance purposes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyInsuranceCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Third Party Insurance Code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyInsuranceCode2" type="xs:string">
						<xs:annotation>
							<xs:documentation>Third Party Insurance Code 2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyInsuranceCommodityCode" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates the commodity code for third party insurance - see ThirdPartyInsuranceCommodityCode enumeration..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyInsuranceFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for third party insurance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyInsuranceShipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Third party insurance shipper (usually policy holder).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="thirdPartyInsurer" type="xs:string">
						<xs:annotation>
							<xs:documentation>Third party insurer name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="timeInTransit" type="amp:Commitment">
						<xs:annotation>
							<xs:documentation>The expected time in transit based on the carrier's delivery commitment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="total" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Total charge (base + special - discount = total).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="trackingNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Tracking number or PRO number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="trackingNumber2" type="xs:string">
						<xs:annotation>
							<xs:documentation>Tracking number 2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="transportMode" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Indicates transport mode - see TransportMode enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ultimateConsignee" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>The ultimate consignee name/address (for export documentation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ultimateConsigneeType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>The type of the ultimate consignee for export reporting - see ConsigneeType enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="ultimateDestinationCountry" type="xs:string">
						<xs:annotation>
							<xs:documentation>Country (or territory) of ultimate destination.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unpack" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package is to be unpacked/uncrated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="unpackFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for unpacking/uncrating the package.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="urbanDeliveryFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Fee for urban or metro area package destination.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData1" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #1.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData2" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #2.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData3" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData4" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #4.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="userData5" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>User defined data #5.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="waybillBolNumber" type="xs:string">
						<xs:annotation>
							<xs:documentation>Waybill or Bill of Lading number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="weight" type="amp:Weight">
						<xs:annotation>
							<xs:documentation>Weight of the entire package or container and everything in or on it.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="wharfageFee" type="amp:Money">
						<xs:annotation>
							<xs:documentation>Wharf/dock fee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="worldEaseCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>A unique identifier for a World Ease group (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="worldEaseFlag" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' if the package is a World Ease package (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="worldEaseId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number which uniquely identifies each World Ease group (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="worldEaseMasterShipmentId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Unique ID assigned to each World Ease shipment (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="worldEaseSingleEuCountry" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>'true' to request single country (or territory) World Ease movement, as opposed to EU movement, for EU destinations (UPS only).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="zone" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier assigned delivery zone.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:all>
				<xs:attribute ref="amp:externalKey" use="optional"/>
			</xs:complexType>
			<xs:attribute name="preProcess" type="xs:string">
				<xs:annotation>
					<xs:documentation>The custom process name used to process the request message.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="postProcess" type="xs:string">
				<xs:annotation>
					<xs:documentation>The custom process name used to process the response message.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="locale" type="xs:language">
				<xs:annotation>
					<xs:documentation>The locale identifier used to process the request.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="asyncCorrelationData" type="xs:string">
				<xs:annotation>
					<xs:documentation>Correlation information for an asynchronous request/response.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:simpleType name="contextControlSetting">
				<xs:restriction base="xs:string">
					<xs:enumeration value="clear">
						<xs:annotation>
							<xs:documentation>Clear the context for this operation.</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="preserve">
						<xs:annotation>
							<xs:documentation>Preserve the context for this operation.</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:attribute name="contextControl" type="amp:contextControlSetting">
				<xs:annotation>
					<xs:documentation>Clear or preserve compound operation context between operations.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="externalKey" type="xs:string">
				<xs:annotation>
					<xs:documentation>Package item attribute used for results matching.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:complexType name="Result">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>Data associated with the result.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="IdentityListResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of identity items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:IdentityList">
						<xs:annotation>
							<xs:documentation>List of identity items.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GroupResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a group.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:Group">
						<xs:annotation>
							<xs:documentation>Group result.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ShipperResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a shipper.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:ShipperInformation">
						<xs:annotation>
							<xs:documentation>Shipper information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="StringResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="xs:string">
						<xs:annotation>
							<xs:documentation>String data associated with the result.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="BooleanResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Boolean data associated with the result.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="IdentityResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:Identity">
						<xs:annotation>
							<xs:documentation>Identity associated with the result.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="DictionaryResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Dictionary associated with the result.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="PackageResult">
				<xs:annotation>
					<xs:documentation>Represents the package-level result of a rate or ship operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Package-level result data.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:externalKey" use="optional"/>
			</xs:complexType>
			<xs:complexType name="PackageResultList">
				<xs:annotation>
					<xs:documentation>List of package-level result data</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:PackageResult">
						<xs:annotation>
							<xs:documentation>Package result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ProcessResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a rate or ship operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Combined result data of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packageResults" type="amp:PackageResultList">
						<xs:annotation>
							<xs:documentation>List of package-level results.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="service" type="amp:Identity">
						<xs:annotation>
							<xs:documentation>Service symbol used to process the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ProcessResultList">
				<xs:annotation>
					<xs:documentation>List of process results from a rating operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:ProcessResult">
						<xs:annotation>
							<xs:documentation>Process result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="RateResult">
				<xs:annotation>
					<xs:documentation>Represents the consolidated results of a rate operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:ProcessResultList">
						<xs:annotation>
							<xs:documentation>Rating results for each of the specified services.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ImageItemList">
				<xs:annotation>
					<xs:documentation>List of image information as a result of generating a document as images.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="imageOutput" type="xs:base64Binary">
						<xs:annotation>
							<xs:documentation>Image data in Base64 encoding.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="imageFile" type="xs:string">
						<xs:annotation>
							<xs:documentation>File name where the image output was saved.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="OutputItemList">
				<xs:annotation>
					<xs:documentation>List of output information as a result of generating a document as device data or pdf when the element splitMultipage is set to true.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="binaryOutput" type="xs:base64Binary">
						<xs:annotation>
							<xs:documentation>Binary representation of document output in Base64 encoding.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="outputFile" type="xs:string">
						<xs:annotation>
							<xs:documentation>File name where the document output was saved.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="DocumentOutput">
				<xs:annotation>
					<xs:documentation>Document output result information.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="xmlOutput" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>XML position document representation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="binaryOutput" type="xs:base64Binary">
						<xs:annotation>
							<xs:documentation>Binary representation of document output in Base64 encoding.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="outputFile" type="xs:string">
						<xs:annotation>
							<xs:documentation>File name where the document output was saved.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="imageList" type="amp:ImageItemList">
						<xs:annotation>
							<xs:documentation>List of document image output information.  There is one image for each page/label in the document.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="outputList" type="amp:OutputItemList">
						<xs:annotation>
							<xs:documentation>List of device or pdf output information.  There is one output for each page/label in the document.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="PrintItem">
				<xs:annotation>
					<xs:documentation>Identifies which specific source item (package, bundle, group, container, ship file) was used to produce a document.</xs:documentation>
				</xs:annotation>
				<xs:choice>
					<xs:element name="msn" type="xs:int">
						<xs:annotation>
							<xs:documentation>MSN of the package that was printed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bundleId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Id of the bundle that was printed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="groupId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Id of the group that was printed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="containerCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Container code that was printed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipFileSymbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>Symbol of the ship file that was printed.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:complexType>
			<xs:complexType name="DocumentResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a document output operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sourceItem" type="amp:PrintItem">
						<xs:annotation>
							<xs:documentation>Identifies which specific source item (package, bundle, group, container, ship file) was used to produce the document.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="output" type="amp:DocumentOutput">
						<xs:annotation>
							<xs:documentation>Document output result information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="DocumentResultList">
				<xs:annotation>
					<xs:documentation>List of document results.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:DocumentResult">
						<xs:annotation>
							<xs:documentation>Document result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="PrintResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a print operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:DocumentResultList">
						<xs:annotation>
							<xs:documentation>List of document output result information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="VoidPackageResult">
				<xs:annotation>
					<xs:documentation>Represents the package-level result of a void operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="package" type="xs:int">
						<xs:annotation>
							<xs:documentation>MSN of the voided package.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="VoidPackageResultList">
				<xs:annotation>
					<xs:documentation>List of package-level results of a void operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:VoidPackageResult">
						<xs:annotation>
							<xs:documentation>Result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="VoidResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a void operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:VoidPackageResultList">
						<xs:annotation>
							<xs:documentation>List of package-level void results.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="additionalVoidedPackages" type="amp:IntegerList">
						<xs:annotation>
							<xs:documentation>List of MSNs of additional packages that were voided as part of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="modifiedPackages" type="amp:IntegerList">
						<xs:annotation>
							<xs:documentation>List of MSNs of packages that were modified as part of the void operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="SearchPackageResult">
				<xs:annotation>
					<xs:documentation>Represents the package-level result of a search operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="resultData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Package data from search.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="voided" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>True if the package has been voided.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="0" name="closeOutMode" type="xs:int">
						<xs:annotation>
							<xs:documentation>Close out mode for package.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="SearchPackageResultList">
				<xs:annotation>
					<xs:documentation>List of package-level results of a search operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:SearchPackageResult">
						<xs:annotation>
							<xs:documentation>Search result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="SearchResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a search operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:SearchPackageResultList">
						<xs:annotation>
							<xs:documentation>List of package-level search results.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ShipFile">
				<xs:annotation>
					<xs:documentation>Represents a ship file.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="symbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>The symbolic name of the ship file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The friendly name of the ship file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sequence" type="xs:int">
						<xs:annotation>
							<xs:documentation>The sequence number of the ship file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="attributes" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>The attributes associated with the ship file.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="TransmitItem">
				<xs:annotation>
					<xs:documentation>Represents a transmit item.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="symbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>The symbolic name of the transmit item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The friendly name of the transmit item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sequence" type="xs:int">
						<xs:annotation>
							<xs:documentation>The sequence number of the transmit item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="status" type="xs:int">
						<xs:annotation>
							<xs:documentation>The status of the transmit item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="files" type="amp:StringList">
						<xs:annotation>
							<xs:documentation>The list of files associated with the transmit item.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="TransmitItemList">
				<xs:annotation>
					<xs:documentation>Represents a list of transmit items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:TransmitItem">
						<xs:annotation>
							<xs:documentation>Transmit item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="CloseOutResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a close out operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Close out result data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipFile" type="amp:ShipFile">
						<xs:annotation>
							<xs:documentation>Ship file information produced by the close out.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="transmitItemList" type="amp:TransmitItemList">
						<xs:annotation>
							<xs:documentation>List of transmit items produced by the close out.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="TransmitItemResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a single transmit operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transmitItem" type="amp:Identity">
						<xs:annotation>
							<xs:documentation>Identity of the transmit item the result is associated with.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="TransmitItemResultList">
				<xs:annotation>
					<xs:documentation>List of transmit operation results.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:TransmitItemResult">
						<xs:annotation>
							<xs:documentation>Transmit result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="TransmitResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a transmit operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:TransmitItemResultList">
						<xs:annotation>
							<xs:documentation>List of individual transmit result information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ModifyPackageResult">
				<xs:annotation>
					<xs:documentation>Represents the package-level result of a modify operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="package" type="xs:int">
						<xs:annotation>
							<xs:documentation>MSN of the modified package.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ModifyPackageResultList">
				<xs:annotation>
					<xs:documentation>List of package-level results of a modify operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:ModifyPackageResult">
						<xs:annotation>
							<xs:documentation>Result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ModifyPackagesResult">
				<xs:annotation>
					<xs:documentation>Represents the result of a modify packages operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:ModifyPackageResultList">
						<xs:annotation>
							<xs:documentation>Package-level result item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="CandidateAddress">
				<xs:annotation>
					<xs:documentation>Represents a candidate address from a validation operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="address" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Validated address information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="residentialCommercialProvided" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>True if residential/commercial information was provided.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="CandidateAddressList">
				<xs:annotation>
					<xs:documentation>List of candidate addresses from a validation operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:CandidateAddress">
						<xs:annotation>
							<xs:documentation>Candidate address item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ValidateResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an address validation operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:CandidateAddressList">
						<xs:annotation>
							<xs:documentation>List of address validation candidates.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="resultType" type="xs:int">
						<xs:annotation>
							<xs:documentation>Type of address validation candidates resultData</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="StockDescriptorList">
				<xs:annotation>
					<xs:documentation>List of stock descriptors.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:StockDescriptor">
						<xs:annotation>
							<xs:documentation>Stock descriptor item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ListStocksResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of stock descriptors.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:StockDescriptorList">
						<xs:annotation>
							<xs:documentation>List of stock descriptors.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GroupList">
				<xs:annotation>
					<xs:documentation>List of groups.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:Group">
						<xs:annotation>
							<xs:documentation>Group item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ListGroupsResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of groups.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:GroupList">
						<xs:annotation>
							<xs:documentation>List of groups.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ListTransmitItemsResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of transmit items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:TransmitItemList">
						<xs:annotation>
							<xs:documentation>List of transmit items.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ShipFileList">
				<xs:annotation>
					<xs:documentation>List of ship files</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:ShipFile">
						<xs:annotation>
							<xs:documentation>Ship file item in list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ListShipFilesResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of ship Files.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:ShipFileList">
						<xs:annotation>
							<xs:documentation>List of ship files.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="StringListResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of string values.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:StringList">
						<xs:annotation>
							<xs:documentation>List of items returned by the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="HolidayItem">
				<xs:annotation>
					<xs:documentation>Item in a holiday dictionary.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="key" type="xs:string">
						<xs:annotation>
							<xs:documentation>Country of the holiday item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="value" type="amp:HolidayList">
						<xs:annotation>
							<xs:documentation>Holiday list of the holiday item.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="HolidayDictionary">
				<xs:annotation>
					<xs:documentation>Dictionary of holiday items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:HolidayItem">
						<xs:annotation>
							<xs:documentation>Holiday item in the holiday dictionary.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="HolidayList">
				<xs:annotation>
					<xs:documentation>List of holidays.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="amp:Holiday">
						<xs:annotation>
							<xs:documentation>Item in holiday list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ListHolidaysResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of holidays.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:HolidayDictionary">
						<xs:annotation>
							<xs:documentation>Dictionary of holiday items returned by the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ScheduledTask">
				<xs:annotation>
					<xs:documentation>Represents a scheduled task.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="1" maxOccurs="1" name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>Name of the scheduled task.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="1" name="period" type="xs:int">
						<xs:annotation>
							<xs:documentation>Period interval, in seconds, for the scheduled task.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="1" name="periodStart" type="xs:int">
						<xs:annotation>
							<xs:documentation>Period start, in seconds from midnight, for the scheduled task.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="1" name="periodEnd" type="xs:int">
						<xs:annotation>
							<xs:documentation>Period end, in seconds from midnight, for the scheduled task.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="1" name="times" type="amp:IntegerList">
						<xs:annotation>
							<xs:documentation>List of times, in seconds from midnight, for the scheduled task.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="1" name="parameters" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Dictionary of parameters for the scheduled task.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ScheduledTaskList">
				<xs:annotation>
					<xs:documentation>List of scheduled tasks.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="task" type="amp:ScheduledTask">
						<xs:annotation>
							<xs:documentation>Item in scheduled task list.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ListScheduledTaskResult">
				<xs:annotation>
					<xs:documentation>Represents the result of an operation returning a list of scheduled tasks.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="code" type="xs:int">
						<xs:annotation>
							<xs:documentation>Return code of the operation. A non-zero code indicates an error occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>Return message of the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resultData" type="amp:ScheduledTaskList">
						<xs:annotation>
							<xs:documentation>List of scheduled tasks returned by the operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="CloseOutRequest">
				<xs:annotation>
					<xs:documentation>Request to perform a close out operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to close out.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to close out.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="closeOutItem" type="xs:string">
						<xs:annotation>
							<xs:documentation>Close out item symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:contextControl" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="closeOutRequest" type="amp:CloseOutRequest">
				<xs:annotation>
					<xs:documentation>Request to perform a close out operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="CloseOutResponse">
				<xs:annotation>
					<xs:documentation>Response from the close out operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:CloseOutResult">
						<xs:annotation>
							<xs:documentation>Result of the close out operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="closeOutResponse" type="amp:CloseOutResponse">
				<xs:annotation>
					<xs:documentation>Response from the close out operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="CreateGroupRequest">
				<xs:annotation>
					<xs:documentation>Request to create a group.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to use for processing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="grouping" type="xs:string">
						<xs:annotation>
							<xs:documentation>Grouping identifier to use to create the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="groupData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Data used to create the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="createGroupRequest" type="amp:CreateGroupRequest">
				<xs:annotation>
					<xs:documentation>Request to create a group.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="CreateGroupResponse">
				<xs:annotation>
					<xs:documentation>Response from the create group operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:GroupResult">
						<xs:annotation>
							<xs:documentation>Result data of the create group operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="createGroupResponse" type="amp:CreateGroupResponse">
				<xs:annotation>
					<xs:documentation>Response from the create group operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="CustomOperationRequest">
				<xs:annotation>
					<xs:documentation>Request to perform a custom operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="processName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Custom process to execute.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="processData" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>Data used by the custom process.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="customOperationRequest" type="amp:CustomOperationRequest">
				<xs:annotation>
					<xs:documentation>Request to perform a custom operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="CustomOperationResponse">
				<xs:annotation>
					<xs:documentation>Response from the custom operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result data of the custom operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="customOperationResponse" type="amp:CustomOperationResponse">
				<xs:annotation>
					<xs:documentation>Response from the custom operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteShipFilesRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a ship file.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipFiles" type="amp:StringList">
						<xs:annotation>
							<xs:documentation>List of ship file symbols.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteShipFilesRequest" type="amp:DeleteShipFilesRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a ship file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteShipFilesResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete ship file operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the delete operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteShipFilesResponse" type="amp:DeleteShipFilesResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete ship file operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteTransmitItemsRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a list of transmit items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transmitItems" type="amp:StringList">
						<xs:annotation>
							<xs:documentation>List of transmit item symbols.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteTransmitItemsRequest" type="amp:DeleteTransmitItemsRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a list of transmit items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteTransmitItemsResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete transmit items operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the delete operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteTransmitItemsResponse" type="amp:DeleteTransmitItemsResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete transmit items operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteTransmitItems2Request">
				<xs:annotation>
					<xs:documentation>Request to delete a list of transmit items. A detailed result for each individual transmit item is returned in the response.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transmitItems" type="amp:StringList">
						<xs:annotation>
							<xs:documentation>List of transmit item symbols.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteTransmitItems2Request" type="amp:DeleteTransmitItems2Request">
				<xs:annotation>
					<xs:documentation>Request to delete a list of transmit items. A detailed result for each individual transmit item is returned in the response.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteTransmitItems2Response">
				<xs:annotation>
					<xs:documentation>Response from the delete transmit items operation. A detailed result for each individual transmit item is included.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:TransmitResult">
						<xs:annotation>
							<xs:documentation>Result of the delete operation, including detailed information for each individual transmit item.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteTransmitItems2Response" type="amp:DeleteTransmitItems2Response">
				<xs:annotation>
					<xs:documentation>Response from the delete transmit items operation. A detailed result for each individual transmit item is included.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetGroupRequest">
				<xs:annotation>
					<xs:documentation>Request to retrieve group information.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to use for processing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="grouping" type="xs:string">
						<xs:annotation>
							<xs:documentation>Grouping identifier to use to locate the group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="groupIdentifier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Group symbol or id.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getGroupRequest" type="amp:GetGroupRequest">
				<xs:annotation>
					<xs:documentation>Request to retrieve group information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetGroupResponse">
				<xs:annotation>
					<xs:documentation>Response from the get group operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:GroupResult">
						<xs:annotation>
							<xs:documentation>Result data of the get group operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getGroupResponse" type="amp:GetGroupResponse">
				<xs:annotation>
					<xs:documentation>Response from the get group operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to retrieve the current AMP message XML schema information.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getSchemaRequest" type="amp:GetSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to retrieve the current AMP message XML schema information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get AMP message XML schema information operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result data of the get schema operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getSchemaResponse" type="amp:GetSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get AMP message XML schema information operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperInformationRequest">
				<xs:annotation>
					<xs:documentation>Request to retrieve shipper information.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperInformationRequest" type="amp:GetShipperInformationRequest">
				<xs:annotation>
					<xs:documentation>Request to retrieve shipper information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperInformationResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper information operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ShipperResult">
						<xs:annotation>
							<xs:documentation>Result data of the get shipper information operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperInformationResponse" type="amp:GetShipperInformationResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper information operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCarriersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of carriers.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to list carriers for. (Optional, will return carriers for all shippers if not specified)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCarriersRequest" type="amp:ListCarriersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of carriers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCarriersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list carriers operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list carriers operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCarriersResponse" type="amp:ListCarriersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list carriers operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCategoriesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of categories.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to list categories for. (Optional, will return categories for all shippers if not specified)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCategoriesRequest" type="amp:ListCategoriesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of categories.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCategoriesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list categories operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list categories operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCategoriesResponse" type="amp:ListCategoriesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list categories operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListInsurersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of insurers.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to list insurers for. (Optional, will return insurers for all shippers if not specified)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listInsurersRequest" type="amp:ListInsurersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of insurers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListInsurersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list insurers operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list insurers operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listInsurersResponse" type="amp:ListInsurersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list insurers operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCloseOutItemsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of closeout items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCloseOutItemsRequest" type="amp:ListCloseOutItemsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of closeout items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCloseOutItemsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list closeout items operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list closeout items operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCloseOutItemsResponse" type="amp:ListCloseOutItemsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list closeout items operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCountriesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of countries and territories.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCountriesRequest" type="amp:ListCountriesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of countries and territories.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCountriesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list countries operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list countries operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCountriesResponse" type="amp:ListCountriesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list countries operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCountryServicesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of services for a country or territory.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="country" type="xs:string">
						<xs:annotation>
							<xs:documentation>Country symbol or code.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCountryServicesRequest" type="amp:ListCountryServicesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of services for a country or territory.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCountryServicesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list country services operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list country services operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCountryServicesResponse" type="amp:ListCountryServicesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list country services operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCurrenciesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of accepted currencies.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCurrenciesRequest" type="amp:ListCurrenciesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of accepted currencies.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListCurrenciesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list currencies operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list countries operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listCurrenciesResponse" type="amp:ListCurrenciesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list currencies operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListDocumentFormatsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of document formats.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="document" type="xs:string">
						<xs:annotation>
							<xs:documentation>Document symbol to list document formats for. (Optional)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="documentTypes" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>Logical document types to list. (LogicalDocumentType enumeration. Optional, will return all types by default. Will be ignored if document is specified.)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listDocumentFormatsRequest" type="amp:ListDocumentFormatsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of document formats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListDocumentFormatsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list document formats operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list document formats operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listDocumentFormatsResponse" type="amp:ListDocumentFormatsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list document formats operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListDocumentsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of documents.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="documentTypes" type="amp:enumList">
						<xs:annotation>
							<xs:documentation>Logical document types to list. (LogicalDocumentType enumeration. Optional, will return all types by default)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="customOnly" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>When set to true, only custom documents will be returned. (Optional, default is false)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listDocumentsRequest" type="amp:ListDocumentsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of documents.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListDocumentsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list documents operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list documents operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listDocumentsResponse" type="amp:ListDocumentsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list documents operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListGroupingsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of groupings for a carrier.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to list groupings.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listGroupingsRequest" type="amp:ListGroupingsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of groupings for a carrier.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListGroupingsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list groupings operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list groupings operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listGroupingsResponse" type="amp:ListGroupingsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list groupings operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListGroupsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of groups for a carrier.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="grouping" type="xs:string">
						<xs:annotation>
							<xs:documentation>Grouping symbol of the groups to list.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="status" type="xs:string">
						<xs:annotation>
							<xs:documentation>Status flags used to filter the group list. (Optional)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listGroupsRequest" type="amp:ListGroupsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of groups for a carrier.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListGroupsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list groups operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ListGroupsResult">
						<xs:annotation>
							<xs:documentation>Result data of the list groups operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listGroupsResponse" type="amp:ListGroupsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list groups operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListIncotermsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of Incoterms.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listIncotermsRequest" type="amp:ListIncotermsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of Incoterms.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListIncotermsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list Incoterms operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list Incoterms operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listIncotermsResponse" type="amp:ListIncotermsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list Incoterms operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListLocalPortsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of local printer ports.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listLocalPortsRequest" type="amp:ListLocalPortsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of local printer ports.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListLocalPortsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list local printer ports operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:StringListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list local printer ports operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listLocalPortsResponse" type="amp:ListLocalPortsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list local printer ports operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListPackagingTypesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of packaging types.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listPackagingTypesRequest" type="amp:ListPackagingTypesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of packaging types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListPackagingTypesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list packaging types operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list packaging types operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listPackagingTypesResponse" type="amp:ListPackagingTypesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list packaging types operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListPaymentTypesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of payment types.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listPaymentTypesRequest" type="amp:ListPaymentTypesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of payment types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListPaymentTypesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list payment types operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list payment types operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listPaymentTypesResponse" type="amp:ListPaymentTypesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list payment types operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListPrinterDevicesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of printer devices.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listPrinterDevicesRequest" type="amp:ListPrinterDevicesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of printer devices.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListPrinterDevicesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list printer devices operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list printer devices operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listPrinterDevicesResponse" type="amp:ListPrinterDevicesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list printer devices operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListServicesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of services.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to list services for. (Optional, will return services for all shippers if not specified)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol. (Optional, will return services for the specified carrier)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listServicesRequest" type="amp:ListServicesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of services.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListServicesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list services operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list services operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listServicesResponse" type="amp:ListServicesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list services operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListShipFilesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of ship files.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="deletable" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>When true, only ship files that are deletable will be returned.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listShipFilesRequest" type="amp:ListShipFilesRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of ship files.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListShipFilesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list ship files operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ListShipFilesResult">
						<xs:annotation>
							<xs:documentation>Result data of the list ship files operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listShipFilesResponse" type="amp:ListShipFilesResponse">
				<xs:annotation>
					<xs:documentation>Response from the list ship files operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListShippersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of shippers.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol. (Optional, will return registered shippers for the specified carrier)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listShippersRequest" type="amp:ListShippersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of shippers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListShippersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list shippers operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list shippers operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listShippersResponse" type="amp:ListShippersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list shippers operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListStocksRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of available printer stocks.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listStocksRequest" type="amp:ListStocksRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of available printer stocks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListStocksResponse">
				<xs:annotation>
					<xs:documentation>Response from the list stocks operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ListStocksResult">
						<xs:annotation>
							<xs:documentation>Result data of the list stocks operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listStocksResponse" type="amp:ListStocksResponse">
				<xs:annotation>
					<xs:documentation>Response from the list stocks operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListTransmitItemsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of transmit items.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="deletable" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>When true, only transmit items that are deletable will be returned.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listTransmitItemsRequest" type="amp:ListTransmitItemsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of transmit items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListTransmitItemsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list transmit items operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ListTransmitItemsResult">
						<xs:annotation>
							<xs:documentation>Result data of the list transmit items operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listTransmitItemsResponse" type="amp:ListTransmitItemsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list transmit items operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListUnitsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of units.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listUnitsRequest" type="amp:ListUnitsRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of units.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListUnitsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list units operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list units operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listUnitsResponse" type="amp:ListUnitsResponse">
				<xs:annotation>
					<xs:documentation>Response from the list units operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListWindowsPrintersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of available Windows printers.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listWindowsPrintersRequest" type="amp:ListWindowsPrintersRequest">
				<xs:annotation>
					<xs:documentation>Request to return a list of available Windows printers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListWindowsPrintersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list Windows printers operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:StringListResult">
						<xs:annotation>
							<xs:documentation>Result data of the list Windows printers operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listWindowsPrintersResponse" type="amp:ListWindowsPrintersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list Windows printers operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ModifyContainerRequest">
				<xs:annotation>
					<xs:documentation>Request to modify a saved container.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to use for processing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="container" type="xs:string">
						<xs:annotation>
							<xs:documentation>Container code to modify.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="containerData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Data used to modify the container.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="modifyContainerRequest" type="amp:ModifyContainerRequest">
				<xs:annotation>
					<xs:documentation>Request to modify a saved container.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ModifyContainerResponse">
				<xs:annotation>
					<xs:documentation>Response from the modify container operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result data of the modify container operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="modifyContainerResponse" type="amp:ModifyContainerResponse">
				<xs:annotation>
					<xs:documentation>Response from the modify container operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ModifyGroupRequest">
				<xs:annotation>
					<xs:documentation>Request to modify a group.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to use for processing. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="grouping" type="xs:string">
						<xs:annotation>
							<xs:documentation>Grouping identifier to modify.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="groupIdentifier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Group symbol or id to modify.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="groupData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Data used to modify the group. (Optional)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="status" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Set to "open" to (re)open the group. Set to "closed" to close the group - see GroupStatus enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="modifyGroupRequest" type="amp:ModifyGroupRequest">
				<xs:annotation>
					<xs:documentation>Request to modify a group.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ModifyGroupResponse">
				<xs:annotation>
					<xs:documentation>Response from the modify group operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result data of the modify group operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="modifyGroupResponse" type="amp:ModifyGroupResponse">
				<xs:annotation>
					<xs:documentation>Response from the modify group operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ModifyPackagesRequest">
				<xs:annotation>
					<xs:documentation>Request to modify a list of packages.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to use for processing. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packages" type="amp:IntegerList">
						<xs:annotation>
							<xs:documentation>List of package MSNs. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packageData" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Data used to modify the packages. (Optional)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="closeOutMode" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Set to "release" to release the packages for close out. Set to "hold" to prevent packages from being closed out until released - see CloseOutMode enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="modifyPackagesRequest" type="amp:ModifyPackagesRequest">
				<xs:annotation>
					<xs:documentation>Request to modify a list of packages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ModifyPackagesResponse">
				<xs:annotation>
					<xs:documentation>Response from the modify packages operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ModifyPackagesResult">
						<xs:annotation>
							<xs:documentation>Result data of the modify packages operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="modifyPackagesResponse" type="amp:ModifyPackagesResponse">
				<xs:annotation>
					<xs:documentation>Response from the modify packages operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="PrintItemList">
				<xs:annotation>
					<xs:documentation>List of items (packages, bundles, groups, containers, ship files) used as source data for the document print operation.</xs:documentation>
				</xs:annotation>
				<xs:choice>
					<xs:element maxOccurs="unbounded" name="msn" type="xs:int">
						<xs:annotation>
							<xs:documentation>MSN of the package to print.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" name="bundleId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Id of the bundle to print.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" name="groupId" type="xs:int">
						<xs:annotation>
							<xs:documentation>Id of the group to print.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" name="containerCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Container code to print.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" name="shipFileSymbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>Symbol of the ship file to print.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:complexType>
			<xs:complexType name="PrintRequest">
				<xs:annotation>
					<xs:documentation>Request to generate and output a document.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol used to generate the document. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol used to generate the document. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="document" type="xs:string">
						<xs:annotation>
							<xs:documentation>Document.format symbol of the document.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="itemList" type="amp:PrintItemList">
						<xs:annotation>
							<xs:documentation>List of source items used to generate the document. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="output" type="xs:string">
						<xs:annotation>
							<xs:documentation>Type of document output. May be "default" for default representation (XML for position documents); "pdf"; image type: "gif", "jpeg", "png", "tiff", "bmp"; or a device symbol. (Optional, default is "default")</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="destination" type="xs:string">
						<xs:annotation>
							<xs:documentation>Destination for the output. May be "response" to return the document data in the response; a valid "file://" URL to save the output to a file; or a Device Manager port. (Optional, default is "response")</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stock" type="amp:StockDescriptor">
						<xs:annotation>
							<xs:documentation>Stock used to print the document. May be a full stock descriptor, or just the symbolic name of the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="documentOptions" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Optional dictionary of options used to generate the document.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="outputOptions" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Optional dictionary of device or image options used when generating document output.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="splitMultipage" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>When set to true, the individual pages of device or pdf output will be split into separate pages with their information returned in the outputList element. (Optional, default is false)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="printRequest" type="amp:PrintRequest">
				<xs:annotation>
					<xs:documentation>Request to generate and output a document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="PrintResponse">
				<xs:annotation>
					<xs:documentation>Response from the print operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:PrintResult">
						<xs:annotation>
							<xs:documentation>Result data of the print operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="printResponse" type="amp:PrintResponse">
				<xs:annotation>
					<xs:documentation>Response from the print operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="PrintXmlRequest">
				<xs:annotation>
					<xs:documentation>Request to output a document from its XML representation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="document" type="xs:anyType">
						<xs:annotation>
							<xs:documentation>XML position document representation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="output" type="xs:string">
						<xs:annotation>
							<xs:documentation>Type of document output. May be "pdf"; image type: "gif", "jpeg", "png", "tiff", "bmp"; or a device symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="destination" type="xs:string">
						<xs:annotation>
							<xs:documentation>Destination for the output. May be "response" to return the document data in the response; a valid "file://" URL to save the output to a file; or a Device Manager port. (Optional, default is "response")</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stock" type="amp:StockDescriptor">
						<xs:annotation>
							<xs:documentation>Stock used to print the document. May be a full stock descriptor, or just the symbolic name of the stock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="outputOptions" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Optional dictionary of device or image options used when generating document output.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="splitMultipage" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>When set to true, the individual pages of device or pdf output will be split into separate pages with their information returned in the outputList element. (Optional, default is false)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="printXmlRequest" type="amp:PrintXmlRequest">
				<xs:annotation>
					<xs:documentation>Request to output a document from its XML representation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="PrintXmlResponse">
				<xs:annotation>
					<xs:documentation>Response from the print XML operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:PrintResult">
						<xs:annotation>
							<xs:documentation>Result data of the print XML operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="printXmlResponse" type="amp:PrintXmlResponse">
				<xs:annotation>
					<xs:documentation>Response from the print XML operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ServiceList">
				<xs:annotation>
					<xs:documentation>List of services to use for a rating operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" name="service" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="RateRequest">
				<xs:annotation>
					<xs:documentation>Request to rate a list of packages with one or more services.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="services" type="amp:ServiceList">
						<xs:annotation>
							<xs:documentation>Service symbols used for the rating operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="defaults" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Default data used for all packages.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="packages" type="amp:DataDictionaryList">
						<xs:annotation>
							<xs:documentation>List of package-level data used for rating.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="sortType" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Set to "rate" to sort the results in ascending rate order. Set to "commitment" to sort the results in commitment order - see SortType enumeration. (Optional, default is no sorting)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="rateRequest" type="amp:RateRequest">
				<xs:annotation>
					<xs:documentation>Request to rate a list of packages with one or more services.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="RateResponse">
				<xs:annotation>
					<xs:documentation>Response from the rating operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:RateResult">
						<xs:annotation>
							<xs:documentation>Result data of the rating operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="rateResponse" type="amp:RateResponse">
				<xs:annotation>
					<xs:documentation>Response from the rating operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ReprocessRequest">
				<xs:annotation>
					<xs:documentation>Request to reprocess a list of packages.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to use for processing. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packages" type="amp:IntegerList">
						<xs:annotation>
							<xs:documentation>List of package MSNs. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="reprocessRequest" type="amp:ReprocessRequest">
				<xs:annotation>
					<xs:documentation>Request to reprocess a list of packages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ReprocessResponse">
				<xs:annotation>
					<xs:documentation>Response from the reprocess operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ProcessResult">
						<xs:annotation>
							<xs:documentation>Result data of the reprocess operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="reprocessResponse" type="amp:ReprocessResponse">
				<xs:annotation>
					<xs:documentation>Response from the reprocess operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SearchRequest">
				<xs:annotation>
					<xs:documentation>Request to search for processed packages.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to search.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to search. (Required when searching a ship file)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipFile" type="xs:string">
						<xs:annotation>
							<xs:documentation>Ship file symbol to search. (Optional, will search un-closed packages if not present)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="filters" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Search filters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="returnFields" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Fields to return from the search. (Optional, default is to return all fields)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="searchCloseOutMode" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Set to "release" to search only released packages. Set to "hold" to search only held packages - see SearchCloseOutMode enumeration. (Optional, default is to search all packages)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="searchVoided" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Set to "nonvoided" to search only non-voided packages. Set to "voided" to search only voided packages - see SearchVoidFlag enumeration. (Optional, default is to search all packages)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="false" name="globalSearch" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>When true, both un-closed and closed packages in all ship files will be searched. (Optional, default is false)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:contextControl" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="searchRequest" type="amp:SearchRequest">
				<xs:annotation>
					<xs:documentation>Request to search for processed packages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SearchResponse">
				<xs:annotation>
					<xs:documentation>Response from the search operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:SearchResult">
						<xs:annotation>
							<xs:documentation>Result data of the search operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="searchResponse" type="amp:SearchResponse">
				<xs:annotation>
					<xs:documentation>Response from the search operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ShipRequest">
				<xs:annotation>
					<xs:documentation>Request to ship a list of packages with a service.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="service" type="xs:string">
						<xs:annotation>
							<xs:documentation>Service symbol used to ship the packages.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="defaults" type="amp:DataDictionary">
						<xs:annotation>
							<xs:documentation>Default data used for all packages.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="packages" type="amp:DataDictionaryList">
						<xs:annotation>
							<xs:documentation>List of package-level data used for shipping.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" default="true" name="saveTransaction" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>When true, the shipping transaction will be saved permanently. When false, data will be returned, but no transaction will be saved. (Optional, default is true)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="closeOutMode" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Set to "release" to release the packages for close out. Set to "hold" to prevent packages from being closed out until released - see CloseOutMode enumeration. (Optional, default is release)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:contextControl" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="shipRequest" type="amp:ShipRequest">
				<xs:annotation>
					<xs:documentation>Request to ship a list of packages with a service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ShipResponse">
				<xs:annotation>
					<xs:documentation>Response from the ship operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ProcessResult">
						<xs:annotation>
							<xs:documentation>Result data of the ship operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="shipResponse" type="amp:ShipResponse">
				<xs:annotation>
					<xs:documentation>Response from the ship operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="TransmitRequest">
				<xs:annotation>
					<xs:documentation>Request to perform a transmit operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to transmit. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to transmit. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="transmitItems" type="amp:StringList">
						<xs:annotation>
							<xs:documentation>List of transmit item symbols. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="transmitRequest" type="amp:TransmitRequest">
				<xs:annotation>
					<xs:documentation>Request to perform a transmit operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="TransmitResponse">
				<xs:annotation>
					<xs:documentation>Response from the transmit operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:TransmitResult">
						<xs:annotation>
							<xs:documentation>Result data of the transmit operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="transmitResponse" type="amp:TransmitResponse">
				<xs:annotation>
					<xs:documentation>Response from the transmit operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ValidateAddressRequest">
				<xs:annotation>
					<xs:documentation>Request to validate an address.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="address" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Address to validate</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="validateAddressRequest" type="amp:ValidateAddressRequest">
				<xs:annotation>
					<xs:documentation>Request to validate an address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ValidateAddressResponse">
				<xs:annotation>
					<xs:documentation>Response from the address validation operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ValidateResult">
						<xs:annotation>
							<xs:documentation>Result data of the address validation operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="validateAddressResponse" type="amp:ValidateAddressResponse">
				<xs:annotation>
					<xs:documentation>Response from the address validation operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="VoidPackagesRequest">
				<xs:annotation>
					<xs:documentation>Request to void a list of packages.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol to use for voiding. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="packages" type="amp:IntegerList">
						<xs:annotation>
							<xs:documentation>List of package MSNs. (Optional when used in a compound operation)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="voidPackagesRequest" type="amp:VoidPackagesRequest">
				<xs:annotation>
					<xs:documentation>Request to void a list of packages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="VoidPackagesResponse">
				<xs:annotation>
					<xs:documentation>Response from the void operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:VoidResult">
						<xs:annotation>
							<xs:documentation>Result data of the void operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="voidPackagesResponse" type="amp:VoidPackagesResponse">
				<xs:annotation>
					<xs:documentation>Response from the void operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ErrorResponse">
				<xs:annotation>
					<xs:documentation>Response returned when a serious error has occurred.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result data containing the error details</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:element name="errorResponse" type="amp:ErrorResponse">
				<xs:annotation>
					<xs:documentation>Response returned when a serious error has occurred.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="CompoundOperation">
				<xs:annotation>
					<xs:documentation>Request to perform multiple operations in a sequence.</xs:documentation>
				</xs:annotation>
				<xs:choice maxOccurs="unbounded">
					<xs:element name="closeOutRequest" type="amp:CloseOutRequest"/>
					<xs:element name="createGroupRequest" type="amp:CreateGroupRequest"/>
					<xs:element name="customOperationRequest" type="amp:CustomOperationRequest"/>
					<xs:element name="deleteShipFilesRequest" type="amp:DeleteShipFilesRequest"/>
					<xs:element name="deleteTransmitItemsRequest" type="amp:DeleteTransmitItemsRequest"/>
					<xs:element name="deleteTransmitItems2Request" type="amp:DeleteTransmitItems2Request"/>
					<xs:element name="getGroupRequest" type="amp:GetGroupRequest"/>
					<xs:element name="getSchemaRequest" type="amp:GetSchemaRequest"/>
					<xs:element name="getShipperInformationRequest" type="amp:GetShipperInformationRequest"/>
					<xs:element name="listCarriersRequest" type="amp:ListCarriersRequest"/>
					<xs:element name="listCategoriesRequest" type="amp:ListCategoriesRequest"/>
					<xs:element name="listInsurersRequest" type="amp:ListInsurersRequest"/>
					<xs:element name="listCloseOutItemsRequest" type="amp:ListCloseOutItemsRequest"/>
					<xs:element name="listCountriesRequest" type="amp:ListCountriesRequest"/>
					<xs:element name="listCountryServicesRequest" type="amp:ListCountryServicesRequest"/>
					<xs:element name="listCurrenciesRequest" type="amp:ListCurrenciesRequest"/>
					<xs:element name="listDocumentsRequest" type="amp:ListDocumentsRequest"/>
					<xs:element name="listDocumentFormatsRequest" type="amp:ListDocumentFormatsRequest"/>
					<xs:element name="listGroupingsRequest" type="amp:ListGroupingsRequest"/>
					<xs:element name="listGroupsRequest" type="amp:ListGroupsRequest"/>
					<xs:element name="listIncotermsRequest" type="amp:ListIncotermsRequest"/>
					<xs:element name="listLocalPortsRequest" type="amp:ListLocalPortsRequest"/>
					<xs:element name="listPackagingTypesRequest" type="amp:ListPackagingTypesRequest"/>
					<xs:element name="listPaymentTypesRequest" type="amp:ListPaymentTypesRequest"/>
					<xs:element name="listPrinterDevicesRequest" type="amp:ListPrinterDevicesRequest"/>
					<xs:element name="listServicesRequest" type="amp:ListServicesRequest"/>
					<xs:element name="listShipFilesRequest" type="amp:ListShipFilesRequest"/>
					<xs:element name="listShippersRequest" type="amp:ListShippersRequest"/>
					<xs:element name="listStocksRequest" type="amp:ListStocksRequest"/>
					<xs:element name="listTransmitItemsRequest" type="amp:ListTransmitItemsRequest"/>
					<xs:element name="listUnitsRequest" type="amp:ListUnitsRequest"/>
					<xs:element name="listWindowsPrintersRequest" type="amp:ListWindowsPrintersRequest"/>
					<xs:element name="modifyContainerRequest" type="amp:ModifyContainerRequest"/>
					<xs:element name="modifyGroupRequest" type="amp:ModifyGroupRequest"/>
					<xs:element name="modifyPackagesRequest" type="amp:ModifyPackagesRequest"/>
					<xs:element name="printRequest" type="amp:PrintRequest"/>
					<xs:element name="printXmlRequest" type="amp:PrintXmlRequest"/>
					<xs:element name="rateRequest" type="amp:RateRequest"/>
					<xs:element name="reprocessRequest" type="amp:ReprocessRequest"/>
					<xs:element name="searchRequest" type="amp:SearchRequest"/>
					<xs:element name="shipRequest" type="amp:ShipRequest"/>
					<xs:element name="transmitRequest" type="amp:TransmitRequest"/>
					<xs:element name="validateAddressRequest" type="amp:ValidateAddressRequest"/>
					<xs:element name="voidPackagesRequest" type="amp:VoidPackagesRequest"/>
				</xs:choice>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
				<xs:attribute name="stopOnFailure" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>When set to true, operations after the first failure will not be attempted.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:complexType>
			<xs:element name="compoundOperation" type="amp:CompoundOperation">
				<xs:annotation>
					<xs:documentation>Request to perform multiple operations in a sequence.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="CompoundResult">
				<xs:annotation>
					<xs:documentation>Response from a compound operation. Contains multiple responses from the individual operations.</xs:documentation>
				</xs:annotation>
				<xs:choice maxOccurs="unbounded">
					<xs:element name="closeOutResponse" type="amp:CloseOutResponse"/>
					<xs:element name="createGroupResponse" type="amp:CreateGroupResponse"/>
					<xs:element name="customOperationResponse" type="amp:CustomOperationResponse"/>
					<xs:element name="deleteShipFilesResponse" type="amp:DeleteShipFilesResponse"/>
					<xs:element name="deleteTransmitItemsResponse" type="amp:DeleteTransmitItemsResponse"/>
					<xs:element name="deleteTransmitItems2Response" type="amp:DeleteTransmitItems2Response"/>
					<xs:element name="getGroupResponse" type="amp:GetGroupResponse"/>
					<xs:element name="getSchemaResponse" type="amp:GetSchemaResponse"/>
					<xs:element name="getShipperInformationResponse" type="amp:GetShipperInformationResponse"/>
					<xs:element name="listCarriersResponse" type="amp:ListCarriersResponse"/>
					<xs:element name="listCategoriesResponse" type="amp:ListCategoriesResponse"/>
					<xs:element name="listInsurersResponse" type="amp:ListInsurersResponse"/>
					<xs:element name="listCloseOutItemsResponse" type="amp:ListCloseOutItemsResponse"/>
					<xs:element name="listCountriesResponse" type="amp:ListCountriesResponse"/>
					<xs:element name="listCountryServicesResponse" type="amp:ListCountryServicesResponse"/>
					<xs:element name="listCurrenciesResponse" type="amp:ListCurrenciesResponse"/>
					<xs:element name="listDocumentsResponse" type="amp:ListDocumentsResponse"/>
					<xs:element name="listDocumentFormatsResponse" type="amp:ListDocumentFormatsResponse"/>
					<xs:element name="listGroupingsResponse" type="amp:ListGroupingsResponse"/>
					<xs:element name="listGroupsResponse" type="amp:ListGroupsResponse"/>
					<xs:element name="listIncotermsResponse" type="amp:ListIncotermsResponse"/>
					<xs:element name="listLocalPortsResponse" type="amp:ListLocalPortsResponse"/>
					<xs:element name="listPackagingTypesResponse" type="amp:ListPackagingTypesResponse"/>
					<xs:element name="listPaymentTypesResponse" type="amp:ListPaymentTypesResponse"/>
					<xs:element name="listPrinterDevicesResponse" type="amp:ListPrinterDevicesResponse"/>
					<xs:element name="listServicesResponse" type="amp:ListServicesResponse"/>
					<xs:element name="listShipFilesResponse" type="amp:ListShipFilesResponse"/>
					<xs:element name="listShippersResponse" type="amp:ListShippersResponse"/>
					<xs:element name="listStocksResponse" type="amp:ListStocksResponse"/>
					<xs:element name="listTransmitItemsResponse" type="amp:ListTransmitItemsResponse"/>
					<xs:element name="listUnitsResponse" type="amp:ListUnitsResponse"/>
					<xs:element name="listWindowsPrintersResponse" type="amp:ListWindowsPrintersResponse"/>
					<xs:element name="modifyContainerResponse" type="amp:ModifyContainerResponse"/>
					<xs:element name="modifyGroupResponse" type="amp:ModifyGroupResponse"/>
					<xs:element name="modifyPackagesResponse" type="amp:ModifyPackagesResponse"/>
					<xs:element name="printResponse" type="amp:PrintResponse"/>
					<xs:element name="printXmlResponse" type="amp:PrintXmlResponse"/>
					<xs:element name="rateResponse" type="amp:RateResponse"/>
					<xs:element name="reprocessResponse" type="amp:ReprocessResponse"/>
					<xs:element name="searchResponse" type="amp:SearchResponse"/>
					<xs:element name="shipResponse" type="amp:ShipResponse"/>
					<xs:element name="transmitResponse" type="amp:TransmitResponse"/>
					<xs:element name="validateAddressResponse" type="amp:ValidateAddressResponse"/>
					<xs:element name="voidPackagesResponse" type="amp:VoidPackagesResponse"/>
				</xs:choice>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="compoundResult" type="amp:CompoundResult">
				<xs:annotation>
					<xs:documentation>Response from a compound operation. Contains multiple responses from the individual operations.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="AddHolidayRequest">
				<xs:annotation>
					<xs:documentation>Request to add a holiday.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="countrySymbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>Country symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="friendlyName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Holiday friendly name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="date" type="xs:date">
						<xs:annotation>
							<xs:documentation>Holiday date to add.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="addHolidayRequest" type="amp:AddHolidayRequest">
				<xs:annotation>
					<xs:documentation>Request to add a holiday.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="AddHolidayResponse">
				<xs:annotation>
					<xs:documentation>Response from the add holiday operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:StringResult">
						<xs:annotation>
							<xs:documentation>Result of the add holiday operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="addHolidayResponse" type="amp:AddHolidayResponse">
				<xs:annotation>
					<xs:documentation>Response from the add holiday operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="AddShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to add a shipper.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="addShipperRequest" type="amp:AddShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to add a shipper.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="AddShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the add shipper operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:StringResult">
						<xs:annotation>
							<xs:documentation>Result of the add shipper operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="addShipperResponse" type="amp:AddShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the add shipper operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="AddShipperExRequest">
				<xs:annotation>
					<xs:documentation>Request to add a shipper.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="address" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Shipper name address to set.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="addShipperExRequest" type="amp:AddShipperExRequest">
				<xs:annotation>
					<xs:documentation>Request to add a shipper.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="AddShipperExResponse">
				<xs:annotation>
					<xs:documentation>Response from the add shipper operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityResult">
						<xs:annotation>
							<xs:documentation>Result of the add shipper operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="addShipperExResponse" type="amp:AddShipperExResponse">
				<xs:annotation>
					<xs:documentation>Response from the add shipper operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteHolidayRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a holiday.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="countrySymbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>Country symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="holidaySymbol" type="xs:string">
						<xs:annotation>
							<xs:documentation>Holiday symbol to delete.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteHolidayRequest" type="amp:DeleteHolidayRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a holiday.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteHolidayResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete holiday operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the delete holiday operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteHolidayResponse" type="amp:DeleteHolidayResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete holiday operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a shipper.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to delete.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteShipperRequest" type="amp:DeleteShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to delete a shipper.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="DeleteShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete shipper operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the delete shipper operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="deleteShipperResponse" type="amp:DeleteShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the delete shipper operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ExecuteHookRequest">
				<xs:annotation>
					<xs:documentation>Request to execute a hook.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hook" type="xs:string">
						<xs:annotation>
							<xs:documentation>Hook symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="hookInfo" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Hook parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="executeHookRequest" type="amp:ExecuteHookRequest">
				<xs:annotation>
					<xs:documentation>Request to execute a hook.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ExecuteHookResponse">
				<xs:annotation>
					<xs:documentation>Response from the execute hook operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the execute hook operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="executeHookResponse" type="amp:ExecuteHookResponse">
				<xs:annotation>
					<xs:documentation>Response from the execute hook operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ExecuteScheduledTaskRequest">
				<xs:annotation>
					<xs:documentation>Request to execute a scheduled task.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>Task name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="parameters" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Task parameters.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="executeScheduledTaskRequest" type="amp:ExecuteScheduledTaskRequest">
				<xs:annotation>
					<xs:documentation>Request to execute a scheduled task.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ExecuteScheduledTaskResponse">
				<xs:annotation>
					<xs:documentation>Response from the execute scheduled task operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the execute scheduled task operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="executeScheduledTaskResponse" type="amp:ExecuteScheduledTaskResponse">
				<xs:annotation>
					<xs:documentation>Response from the execute scheduled task operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetCategoryPropertyRequest">
				<xs:annotation>
					<xs:documentation>Request to get category property.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="categoryPropertyId" type="amp:enumItem">
						<xs:annotation>
							<xs:documentation>Category property id.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getCategoryPropertyRequest" type="amp:GetCategoryPropertyRequest">
				<xs:annotation>
					<xs:documentation>Request to get category property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetCategoryPropertyResponse">
				<xs:annotation>
					<xs:documentation>Response from the get category property operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:BooleanResult">
						<xs:annotation>
							<xs:documentation>Result of the get category property operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getCategoryPropertyResponse" type="amp:GetCategoryPropertyResponse">
				<xs:annotation>
					<xs:documentation>Response from the get category property operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetCategoryShipperErrorStatusRequest">
				<xs:annotation>
					<xs:documentation>Request to get category shipper error status.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getCategoryShipperErrorStatusRequest" type="amp:GetCategoryShipperErrorStatusRequest">
				<xs:annotation>
					<xs:documentation>Request to get category shipper error status.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetCategoryShipperErrorStatusResponse">
				<xs:annotation>
					<xs:documentation>Response from the get category shipper error status operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the get category shipper error status operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getCategoryShipperErrorStatusResponse" type="amp:GetCategoryShipperErrorStatusResponse">
				<xs:annotation>
					<xs:documentation>Response from the get category shipper error status operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetComponentConfigurationAssemblyRequest">
				<xs:annotation>
					<xs:documentation>Request to get Progistics Management Console component configuration assembly (for internal use only).</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assemblyVersion" type="xs:string">
						<xs:annotation>
							<xs:documentation>Progistics Management Console configuration assembly version.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getComponentConfigurationAssemblyRequest" type="amp:GetComponentConfigurationAssemblyRequest">
				<xs:annotation>
					<xs:documentation>Request to get Progistics Management Console component configuration assembly (for internal use only).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetComponentConfigurationAssemblyResponse">
				<xs:annotation>
					<xs:documentation>Response from the get Progistics Management Console component configuration assembly operation (for internal use only).</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the get Progistics Management Console component configuration assembly operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getComponentConfigurationAssemblyResponse" type="amp:GetComponentConfigurationAssemblyResponse">
				<xs:annotation>
					<xs:documentation>Response from the get Progistics Management Console component configuration assembly operation (for internal use only).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetHolidaysRequest">
				<xs:annotation>
					<xs:documentation>Request to get holidays.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getHolidaysRequest" type="amp:GetHolidaysRequest">
				<xs:annotation>
					<xs:documentation>Request to get holidays.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetHolidaysResponse">
				<xs:annotation>
					<xs:documentation>Response from the get holidays operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ListHolidaysResult">
						<xs:annotation>
							<xs:documentation>Result of the get holidays operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getHolidaysResponse" type="amp:GetHolidaysResponse">
				<xs:annotation>
					<xs:documentation>Response from the get holidays operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetHooksSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to get hooks schema.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getHooksSchemaRequest" type="amp:GetHooksSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to get hooks schema.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetHooksSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get hooks schema operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the get hooks schema operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getHooksSchemaResponse" type="amp:GetHooksSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get hooks schema operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetScheduledTasksRequest">
				<xs:annotation>
					<xs:documentation>Request to get scheduled tasks.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getScheduledTasksRequest" type="amp:GetScheduledTasksRequest">
				<xs:annotation>
					<xs:documentation>Request to get scheduled tasks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetScheduledTasksResponse">
				<xs:annotation>
					<xs:documentation>Response from the get scheduled tasks operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:ListScheduledTaskResult">
						<xs:annotation>
							<xs:documentation>Result of the get scheduled tasks operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getScheduledTasksResponse" type="amp:GetScheduledTasksResponse">
				<xs:annotation>
					<xs:documentation>Response from the get scheduled tasks operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetServerErrorStatusRequest">
				<xs:annotation>
					<xs:documentation>Request to get server error status.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getServerErrorStatusRequest" type="amp:GetServerErrorStatusRequest">
				<xs:annotation>
					<xs:documentation>Request to get server error status.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetServerErrorStatusResponse">
				<xs:annotation>
					<xs:documentation>Response from the get server error status operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the get server error status operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getServerErrorStatusResponse" type="amp:GetServerErrorStatusResponse">
				<xs:annotation>
					<xs:documentation>Response from the get server error status operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperConfigDataRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper configuration data.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperConfigDataRequest" type="amp:GetShipperConfigDataRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper configuration data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperConfigDataResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper configuration data operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:DictionaryResult">
						<xs:annotation>
							<xs:documentation>Result of the get shipper configuration data operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperConfigDataResponse" type="amp:GetShipperConfigDataResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper configuration data operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperConfigSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper configuration schema.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperConfigSchemaRequest" type="amp:GetShipperConfigSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper configuration schema.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperConfigSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper configuration schema operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the get shipper configuration schema operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperConfigSchemaResponse" type="amp:GetShipperConfigSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper configuration schema operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperControlDataRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper control data.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperControlDataRequest" type="amp:GetShipperControlDataRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper control data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperControlDataResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper control data operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:DictionaryResult">
						<xs:annotation>
							<xs:documentation>Result of the get shipper control data operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperControlDataResponse" type="amp:GetShipperControlDataResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper control data operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperControlSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper control schema.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperControlSchemaRequest" type="amp:GetShipperControlSchemaRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper control schema.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperControlSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper control schema operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the get shipper control schema operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperControlSchemaResponse" type="amp:GetShipperControlSchemaResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper control schema operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperErrorStatusRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper error status.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperErrorStatusRequest" type="amp:GetShipperErrorStatusRequest">
				<xs:annotation>
					<xs:documentation>Request to get shipper error status.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetShipperErrorStatusResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper error status operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the get shipper error status operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="getShipperErrorStatusResponse" type="amp:GetShipperErrorStatusResponse">
				<xs:annotation>
					<xs:documentation>Response from the get shipper error status operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListServersRequest">
				<xs:annotation>
					<xs:documentation>Request to list servers.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listServersRequest" type="amp:ListServersRequest">
				<xs:annotation>
					<xs:documentation>Request to list servers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ListServersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list servers operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityListResult">
						<xs:annotation>
							<xs:documentation>Result of the list servers operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="listServersResponse" type="amp:ListServersResponse">
				<xs:annotation>
					<xs:documentation>Response from the list servers operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="RegisterShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to register a shipper.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to register.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="registerShipperRequest" type="amp:RegisterShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to register a shipper.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="RegisterShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the register shipper operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the register shipper operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="registerShipperResponse" type="amp:RegisterShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the register shipper operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ResetTransAPIPoolsRequest">
				<xs:annotation>
					<xs:documentation>Request to reset internal AMP TransAPI pools.</xs:documentation>
				</xs:annotation>
				<xs:sequence/>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="resetTransAPIPoolsRequest" type="amp:ResetTransAPIPoolsRequest">
				<xs:annotation>
					<xs:documentation>Request to reset internal AMP TransAPI pools.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="ResetTransAPIPoolsResponse">
				<xs:annotation>
					<xs:documentation>Response from the reset TransAPI pools operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the reset TransAPI pools operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="resetTransAPIPoolsResponse" type="amp:ResetTransAPIPoolsResponse">
				<xs:annotation>
					<xs:documentation>Response from the reset TransAPI pools operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperAbbreviationRequest">
				<xs:annotation>
					<xs:documentation>Request to set abbreviation for a shipper.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="abbreviation" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper abbreviation to set.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperAbbreviationRequest" type="amp:SetShipperAbbreviationRequest">
				<xs:annotation>
					<xs:documentation>Request to set abbreviation for a shipper.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperAbbreviationResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper abbreviation operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityResult">
						<xs:annotation>
							<xs:documentation>Result of the set shipper abbreviation operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperAbbreviationResponse" type="amp:SetShipperAbbreviationResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper abbreviation operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperConfigInfoRequest">
				<xs:annotation>
					<xs:documentation>Request to set shipper configuration info.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="configInfo" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Configuration info to set.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperConfigInfoRequest" type="amp:SetShipperConfigInfoRequest">
				<xs:annotation>
					<xs:documentation>Request to set shipper configuration info.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperConfigInfoResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper configuration info operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the set shipper configuration info operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperConfigInfoResponse" type="amp:SetShipperConfigInfoResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper configuration info operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperControlInfoRequest">
				<xs:annotation>
					<xs:documentation>Request to set shipper control info.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="controlInfo" type="amp:Dictionary">
						<xs:annotation>
							<xs:documentation>Control data to set.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperControlInfoRequest" type="amp:SetShipperControlInfoRequest">
				<xs:annotation>
					<xs:documentation>Request to set shipper control info.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperControlInfoResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper control info operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the set shipper control info operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperControlInfoResponse" type="amp:SetShipperControlInfoResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper control info operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperNameAddressRequest">
				<xs:annotation>
					<xs:documentation>Request to set shipper name address.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="address" type="amp:NameAddress">
						<xs:annotation>
							<xs:documentation>Shipper name address to set.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperNameAddressRequest" type="amp:SetShipperNameAddressRequest">
				<xs:annotation>
					<xs:documentation>Request to set shipper name address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="SetShipperNameAddressResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper name address operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:IdentityResult">
						<xs:annotation>
							<xs:documentation>Result of the set shipper name address operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="setShipperNameAddressResponse" type="amp:SetShipperNameAddressResponse">
				<xs:annotation>
					<xs:documentation>Response from the set shipper name address operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="UnRegisterShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to unregister a shipper.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="carrier" type="xs:string">
						<xs:annotation>
							<xs:documentation>Carrier symbol.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shipper" type="xs:string">
						<xs:annotation>
							<xs:documentation>Shipper symbol to unregister.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:preProcess" use="optional"/>
				<xs:attribute ref="amp:postProcess" use="optional"/>
				<xs:attribute ref="amp:locale" use="optional"/>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="unRegisterShipperRequest" type="amp:UnRegisterShipperRequest">
				<xs:annotation>
					<xs:documentation>Request to unregister a shipper.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="UnRegisterShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the unregister shipper operation.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="result" type="amp:Result">
						<xs:annotation>
							<xs:documentation>Result of the unregister shipper operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ref="amp:asyncCorrelationData" use="optional"/>
			</xs:complexType>
			<xs:element name="unRegisterShipperResponse" type="amp:UnRegisterShipperResponse">
				<xs:annotation>
					<xs:documentation>Response from the unregister shipper operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="ErrorMessage">
		<wsdl:part name="fault" element="amp:errorResponse"/>
	</wsdl:message>
	<wsdl:message name="CloseOutRequestMessage">
		<wsdl:part name="body" element="amp:closeOutRequest">
			<wsdl:documentation>Request to perform a close out operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CloseOutResponseMessage">
		<wsdl:part name="body" element="amp:closeOutResponse">
			<wsdl:documentation>Response from the close out operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CreateGroupRequestMessage">
		<wsdl:part name="body" element="amp:createGroupRequest">
			<wsdl:documentation>Request to create a group.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CreateGroupResponseMessage">
		<wsdl:part name="body" element="amp:createGroupResponse">
			<wsdl:documentation>Response from the create group operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CustomOperationRequestMessage">
		<wsdl:part name="body" element="amp:customOperationRequest">
			<wsdl:documentation>Request to perform a custom operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CustomOperationResponseMessage">
		<wsdl:part name="body" element="amp:customOperationResponse">
			<wsdl:documentation>Response from the custom operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteShipFilesRequestMessage">
		<wsdl:part name="body" element="amp:deleteShipFilesRequest">
			<wsdl:documentation>Request to delete a ship file.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteShipFilesResponseMessage">
		<wsdl:part name="body" element="amp:deleteShipFilesResponse">
			<wsdl:documentation>Response from the delete ship file operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteTransmitItemsRequestMessage">
		<wsdl:part name="body" element="amp:deleteTransmitItemsRequest">
			<wsdl:documentation>Request to delete a list of transmit items.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteTransmitItemsResponseMessage">
		<wsdl:part name="body" element="amp:deleteTransmitItemsResponse">
			<wsdl:documentation>Response from the delete transmit items operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteTransmitItems2RequestMessage">
		<wsdl:part name="body" element="amp:deleteTransmitItems2Request">
			<wsdl:documentation>Request to delete a list of transmit items. A detailed result for each individual transmit item is returned in the response.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteTransmitItems2ResponseMessage">
		<wsdl:part name="body" element="amp:deleteTransmitItems2Response">
			<wsdl:documentation>Response from the delete transmit items operation. A detailed result for each individual transmit item is included.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetGroupRequestMessage">
		<wsdl:part name="body" element="amp:getGroupRequest">
			<wsdl:documentation>Request to retrieve group information.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetGroupResponseMessage">
		<wsdl:part name="body" element="amp:getGroupResponse">
			<wsdl:documentation>Response from the get group operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetSchemaRequestMessage">
		<wsdl:part name="body" element="amp:getSchemaRequest">
			<wsdl:documentation>Request to retrieve the current AMP message XML schema information.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetSchemaResponseMessage">
		<wsdl:part name="body" element="amp:getSchemaResponse">
			<wsdl:documentation>Response from the get AMP message XML schema information operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperInformationRequestMessage">
		<wsdl:part name="body" element="amp:getShipperInformationRequest">
			<wsdl:documentation>Request to retrieve shipper information.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperInformationResponseMessage">
		<wsdl:part name="body" element="amp:getShipperInformationResponse">
			<wsdl:documentation>Response from the get shipper information operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCarriersRequestMessage">
		<wsdl:part name="body" element="amp:listCarriersRequest">
			<wsdl:documentation>Request to return a list of carriers.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCarriersResponseMessage">
		<wsdl:part name="body" element="amp:listCarriersResponse">
			<wsdl:documentation>Response from the list carriers operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCategoriesRequestMessage">
		<wsdl:part name="body" element="amp:listCategoriesRequest">
			<wsdl:documentation>Request to return a list of categories.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCategoriesResponseMessage">
		<wsdl:part name="body" element="amp:listCategoriesResponse">
			<wsdl:documentation>Response from the list categories operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListInsurersRequestMessage">
		<wsdl:part name="body" element="amp:listInsurersRequest">
			<wsdl:documentation>Request to return a list of insurers.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListInsurersResponseMessage">
		<wsdl:part name="body" element="amp:listInsurersResponse">
			<wsdl:documentation>Response from the list insurers operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCloseOutItemsRequestMessage">
		<wsdl:part name="body" element="amp:listCloseOutItemsRequest">
			<wsdl:documentation>Request to return a list of closeout items.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCloseOutItemsResponseMessage">
		<wsdl:part name="body" element="amp:listCloseOutItemsResponse">
			<wsdl:documentation>Response from the list closeout items operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCountriesRequestMessage">
		<wsdl:part name="body" element="amp:listCountriesRequest">
			<wsdl:documentation>Request to return a list of countries and territories.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCountriesResponseMessage">
		<wsdl:part name="body" element="amp:listCountriesResponse">
			<wsdl:documentation>Response from the list countries operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCountryServicesRequestMessage">
		<wsdl:part name="body" element="amp:listCountryServicesRequest">
			<wsdl:documentation>Request to return a list of services for a country or territory.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCountryServicesResponseMessage">
		<wsdl:part name="body" element="amp:listCountryServicesResponse">
			<wsdl:documentation>Response from the list country services operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCurrenciesRequestMessage">
		<wsdl:part name="body" element="amp:listCurrenciesRequest">
			<wsdl:documentation>Request to return a list of accepted currencies.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListCurrenciesResponseMessage">
		<wsdl:part name="body" element="amp:listCurrenciesResponse">
			<wsdl:documentation>Response from the list currencies operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListDocumentsRequestMessage">
		<wsdl:part name="body" element="amp:listDocumentsRequest">
			<wsdl:documentation>Request to return a list of documents.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListDocumentsResponseMessage">
		<wsdl:part name="body" element="amp:listDocumentsResponse">
			<wsdl:documentation>Response from the list documents operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListDocumentFormatsRequestMessage">
		<wsdl:part name="body" element="amp:listDocumentFormatsRequest">
			<wsdl:documentation>Request to return a list of document formats.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListDocumentFormatsResponseMessage">
		<wsdl:part name="body" element="amp:listDocumentFormatsResponse">
			<wsdl:documentation>Response from the list document formats operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListGroupingsRequestMessage">
		<wsdl:part name="body" element="amp:listGroupingsRequest">
			<wsdl:documentation>Request to return a list of groupings for a carrier.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListGroupingsResponseMessage">
		<wsdl:part name="body" element="amp:listGroupingsResponse">
			<wsdl:documentation>Response from the list groupings operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListGroupsRequestMessage">
		<wsdl:part name="body" element="amp:listGroupsRequest">
			<wsdl:documentation>Request to return a list of groups for a carrier.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListGroupsResponseMessage">
		<wsdl:part name="body" element="amp:listGroupsResponse">
			<wsdl:documentation>Response from the list groups operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListIncotermsRequestMessage">
		<wsdl:part name="body" element="amp:listIncotermsRequest">
			<wsdl:documentation>Request to return a list of Incoterms.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListIncotermsResponseMessage">
		<wsdl:part name="body" element="amp:listIncotermsResponse">
			<wsdl:documentation>Response from the list Incoterms operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListLocalPortsRequestMessage">
		<wsdl:part name="body" element="amp:listLocalPortsRequest">
			<wsdl:documentation>Request to return a list of local printer ports.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListLocalPortsResponseMessage">
		<wsdl:part name="body" element="amp:listLocalPortsResponse">
			<wsdl:documentation>Response from the list local printer ports operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListPackagingTypesRequestMessage">
		<wsdl:part name="body" element="amp:listPackagingTypesRequest">
			<wsdl:documentation>Request to return a list of packaging types.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListPackagingTypesResponseMessage">
		<wsdl:part name="body" element="amp:listPackagingTypesResponse">
			<wsdl:documentation>Response from the list packaging types operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListPaymentTypesRequestMessage">
		<wsdl:part name="body" element="amp:listPaymentTypesRequest">
			<wsdl:documentation>Request to return a list of payment types.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListPaymentTypesResponseMessage">
		<wsdl:part name="body" element="amp:listPaymentTypesResponse">
			<wsdl:documentation>Response from the list payment types operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListPrinterDevicesRequestMessage">
		<wsdl:part name="body" element="amp:listPrinterDevicesRequest">
			<wsdl:documentation>Request to return a list of printer devices.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListPrinterDevicesResponseMessage">
		<wsdl:part name="body" element="amp:listPrinterDevicesResponse">
			<wsdl:documentation>Response from the list printer devices operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListServicesRequestMessage">
		<wsdl:part name="body" element="amp:listServicesRequest">
			<wsdl:documentation>Request to return a list of services.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListServicesResponseMessage">
		<wsdl:part name="body" element="amp:listServicesResponse">
			<wsdl:documentation>Response from the list services operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListShipFilesRequestMessage">
		<wsdl:part name="body" element="amp:listShipFilesRequest">
			<wsdl:documentation>Request to return a list of ship files.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListShipFilesResponseMessage">
		<wsdl:part name="body" element="amp:listShipFilesResponse">
			<wsdl:documentation>Response from the list ship files operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListShippersRequestMessage">
		<wsdl:part name="body" element="amp:listShippersRequest">
			<wsdl:documentation>Request to return a list of shippers.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListShippersResponseMessage">
		<wsdl:part name="body" element="amp:listShippersResponse">
			<wsdl:documentation>Response from the list shippers operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListStocksRequestMessage">
		<wsdl:part name="body" element="amp:listStocksRequest">
			<wsdl:documentation>Request to return a list of available printer stocks.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListStocksResponseMessage">
		<wsdl:part name="body" element="amp:listStocksResponse">
			<wsdl:documentation>Response from the list stocks operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListTransmitItemsRequestMessage">
		<wsdl:part name="body" element="amp:listTransmitItemsRequest">
			<wsdl:documentation>Request to return a list of transmit items.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListTransmitItemsResponseMessage">
		<wsdl:part name="body" element="amp:listTransmitItemsResponse">
			<wsdl:documentation>Response from the list transmit items operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListUnitsRequestMessage">
		<wsdl:part name="body" element="amp:listUnitsRequest">
			<wsdl:documentation>Request to return a list of units.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListUnitsResponseMessage">
		<wsdl:part name="body" element="amp:listUnitsResponse">
			<wsdl:documentation>Response from the list units operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListWindowsPrintersRequestMessage">
		<wsdl:part name="body" element="amp:listWindowsPrintersRequest">
			<wsdl:documentation>Request to return a list of available Windows printers.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListWindowsPrintersResponseMessage">
		<wsdl:part name="body" element="amp:listWindowsPrintersResponse">
			<wsdl:documentation>Response from the list Windows printers operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ModifyContainerRequestMessage">
		<wsdl:part name="body" element="amp:modifyContainerRequest">
			<wsdl:documentation>Request to modify a saved container.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ModifyContainerResponseMessage">
		<wsdl:part name="body" element="amp:modifyContainerResponse">
			<wsdl:documentation>Response from the modify container operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ModifyGroupRequestMessage">
		<wsdl:part name="body" element="amp:modifyGroupRequest">
			<wsdl:documentation>Request to modify a group.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ModifyGroupResponseMessage">
		<wsdl:part name="body" element="amp:modifyGroupResponse">
			<wsdl:documentation>Response from the modify group operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ModifyPackagesRequestMessage">
		<wsdl:part name="body" element="amp:modifyPackagesRequest">
			<wsdl:documentation>Request to modify a list of packages.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ModifyPackagesResponseMessage">
		<wsdl:part name="body" element="amp:modifyPackagesResponse">
			<wsdl:documentation>Response from the modify packages operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="PrintRequestMessage">
		<wsdl:part name="body" element="amp:printRequest">
			<wsdl:documentation>Request to generate and output a document.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="PrintResponseMessage">
		<wsdl:part name="body" element="amp:printResponse">
			<wsdl:documentation>Response from the print operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="PrintXmlRequestMessage">
		<wsdl:part name="body" element="amp:printXmlRequest">
			<wsdl:documentation>Request to output a document from its XML representation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="PrintXmlResponseMessage">
		<wsdl:part name="body" element="amp:printXmlResponse">
			<wsdl:documentation>Response from the print XML operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="RateRequestMessage">
		<wsdl:part name="body" element="amp:rateRequest">
			<wsdl:documentation>Request to rate a list of packages with one or more services.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="RateResponseMessage">
		<wsdl:part name="body" element="amp:rateResponse">
			<wsdl:documentation>Response from the rating operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ReprocessRequestMessage">
		<wsdl:part name="body" element="amp:reprocessRequest">
			<wsdl:documentation>Request to reprocess a list of packages.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ReprocessResponseMessage">
		<wsdl:part name="body" element="amp:reprocessResponse">
			<wsdl:documentation>Response from the reprocess operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SearchRequestMessage">
		<wsdl:part name="body" element="amp:searchRequest">
			<wsdl:documentation>Request to search for processed packages.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SearchResponseMessage">
		<wsdl:part name="body" element="amp:searchResponse">
			<wsdl:documentation>Response from the search operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ShipRequestMessage">
		<wsdl:part name="body" element="amp:shipRequest">
			<wsdl:documentation>Request to ship a list of packages with a service.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ShipResponseMessage">
		<wsdl:part name="body" element="amp:shipResponse">
			<wsdl:documentation>Response from the ship operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="TransmitRequestMessage">
		<wsdl:part name="body" element="amp:transmitRequest">
			<wsdl:documentation>Request to perform a transmit operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="TransmitResponseMessage">
		<wsdl:part name="body" element="amp:transmitResponse">
			<wsdl:documentation>Response from the transmit operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ValidateAddressRequestMessage">
		<wsdl:part name="body" element="amp:validateAddressRequest">
			<wsdl:documentation>Request to validate an address.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ValidateAddressResponseMessage">
		<wsdl:part name="body" element="amp:validateAddressResponse">
			<wsdl:documentation>Response from the address validation operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="VoidPackagesRequestMessage">
		<wsdl:part name="body" element="amp:voidPackagesRequest">
			<wsdl:documentation>Request to void a list of packages.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="VoidPackagesResponseMessage">
		<wsdl:part name="body" element="amp:voidPackagesResponse">
			<wsdl:documentation>Response from the void operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CompoundOperationMessage">
		<wsdl:part name="body" element="amp:compoundOperation">
			<wsdl:documentation>Request to perform multiple operations in a sequence.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CompoundResultMessage">
		<wsdl:part name="body" element="amp:compoundResult">
			<wsdl:documentation>Response from a compound operation. Contains multiple responses from the individual operations.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddHolidayRequestMessage">
		<wsdl:part name="body" element="amp:addHolidayRequest">
			<wsdl:documentation>Request to add a holiday.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddHolidayResponseMessage">
		<wsdl:part name="body" element="amp:addHolidayResponse">
			<wsdl:documentation>Response from the add holiday operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddShipperRequestMessage">
		<wsdl:part name="body" element="amp:addShipperRequest">
			<wsdl:documentation>Request to add a shipper.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddShipperResponseMessage">
		<wsdl:part name="body" element="amp:addShipperResponse">
			<wsdl:documentation>Response from the add shipper operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddShipperExRequestMessage">
		<wsdl:part name="body" element="amp:addShipperExRequest">
			<wsdl:documentation>Request to add a shipper.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddShipperExResponseMessage">
		<wsdl:part name="body" element="amp:addShipperExResponse">
			<wsdl:documentation>Response from the add shipper operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteHolidayRequestMessage">
		<wsdl:part name="body" element="amp:deleteHolidayRequest">
			<wsdl:documentation>Request to delete a holiday.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteHolidayResponseMessage">
		<wsdl:part name="body" element="amp:deleteHolidayResponse">
			<wsdl:documentation>Response from the delete holiday operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteShipperRequestMessage">
		<wsdl:part name="body" element="amp:deleteShipperRequest">
			<wsdl:documentation>Request to delete a shipper.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="DeleteShipperResponseMessage">
		<wsdl:part name="body" element="amp:deleteShipperResponse">
			<wsdl:documentation>Response from the delete shipper operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExecuteHookRequestMessage">
		<wsdl:part name="body" element="amp:executeHookRequest">
			<wsdl:documentation>Request to execute a hook.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExecuteHookResponseMessage">
		<wsdl:part name="body" element="amp:executeHookResponse">
			<wsdl:documentation>Response from the execute hook operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExecuteScheduledTaskRequestMessage">
		<wsdl:part name="body" element="amp:executeScheduledTaskRequest">
			<wsdl:documentation>Request to execute a scheduled task.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExecuteScheduledTaskResponseMessage">
		<wsdl:part name="body" element="amp:executeScheduledTaskResponse">
			<wsdl:documentation>Response from the execute scheduled task operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetCategoryPropertyRequestMessage">
		<wsdl:part name="body" element="amp:getCategoryPropertyRequest">
			<wsdl:documentation>Request to get category property.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetCategoryPropertyResponseMessage">
		<wsdl:part name="body" element="amp:getCategoryPropertyResponse">
			<wsdl:documentation>Response from the get category property operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetCategoryShipperErrorStatusRequestMessage">
		<wsdl:part name="body" element="amp:getCategoryShipperErrorStatusRequest">
			<wsdl:documentation>Request to get category shipper error status.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetCategoryShipperErrorStatusResponseMessage">
		<wsdl:part name="body" element="amp:getCategoryShipperErrorStatusResponse">
			<wsdl:documentation>Response from the get category shipper error status operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetComponentConfigurationAssemblyRequestMessage">
		<wsdl:part name="body" element="amp:getComponentConfigurationAssemblyRequest">
			<wsdl:documentation>Request to get Progistics Management Console component configuration assembly (for internal use only).</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetComponentConfigurationAssemblyResponseMessage">
		<wsdl:part name="body" element="amp:getComponentConfigurationAssemblyResponse">
			<wsdl:documentation>Response from the get Progistics Management Console component configuration assembly operation (for internal use only).</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetHolidaysRequestMessage">
		<wsdl:part name="body" element="amp:getHolidaysRequest">
			<wsdl:documentation>Request to get holidays.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetHolidaysResponseMessage">
		<wsdl:part name="body" element="amp:getHolidaysResponse">
			<wsdl:documentation>Response from the get holidays operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetHooksSchemaRequestMessage">
		<wsdl:part name="body" element="amp:getHooksSchemaRequest">
			<wsdl:documentation>Request to get hooks schema.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetHooksSchemaResponseMessage">
		<wsdl:part name="body" element="amp:getHooksSchemaResponse">
			<wsdl:documentation>Response from the get hooks schema operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetScheduledTasksRequestMessage">
		<wsdl:part name="body" element="amp:getScheduledTasksRequest">
			<wsdl:documentation>Request to get scheduled tasks.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetScheduledTasksResponseMessage">
		<wsdl:part name="body" element="amp:getScheduledTasksResponse">
			<wsdl:documentation>Response from the get scheduled tasks operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetServerErrorStatusRequestMessage">
		<wsdl:part name="body" element="amp:getServerErrorStatusRequest">
			<wsdl:documentation>Request to get server error status.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetServerErrorStatusResponseMessage">
		<wsdl:part name="body" element="amp:getServerErrorStatusResponse">
			<wsdl:documentation>Response from the get server error status operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperConfigDataRequestMessage">
		<wsdl:part name="body" element="amp:getShipperConfigDataRequest">
			<wsdl:documentation>Request to get shipper configuration data.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperConfigDataResponseMessage">
		<wsdl:part name="body" element="amp:getShipperConfigDataResponse">
			<wsdl:documentation>Response from the get shipper configuration data operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperConfigSchemaRequestMessage">
		<wsdl:part name="body" element="amp:getShipperConfigSchemaRequest">
			<wsdl:documentation>Request to get shipper configuration schema.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperConfigSchemaResponseMessage">
		<wsdl:part name="body" element="amp:getShipperConfigSchemaResponse">
			<wsdl:documentation>Response from the get shipper configuration schema operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperControlDataRequestMessage">
		<wsdl:part name="body" element="amp:getShipperControlDataRequest">
			<wsdl:documentation>Request to get shipper control data.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperControlDataResponseMessage">
		<wsdl:part name="body" element="amp:getShipperControlDataResponse">
			<wsdl:documentation>Response from the get shipper control data operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperControlSchemaRequestMessage">
		<wsdl:part name="body" element="amp:getShipperControlSchemaRequest">
			<wsdl:documentation>Request to get shipper control schema.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperControlSchemaResponseMessage">
		<wsdl:part name="body" element="amp:getShipperControlSchemaResponse">
			<wsdl:documentation>Response from the get shipper control schema operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperErrorStatusRequestMessage">
		<wsdl:part name="body" element="amp:getShipperErrorStatusRequest">
			<wsdl:documentation>Request to get shipper error status.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetShipperErrorStatusResponseMessage">
		<wsdl:part name="body" element="amp:getShipperErrorStatusResponse">
			<wsdl:documentation>Response from the get shipper error status operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListServersRequestMessage">
		<wsdl:part name="body" element="amp:listServersRequest">
			<wsdl:documentation>Request to list servers.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ListServersResponseMessage">
		<wsdl:part name="body" element="amp:listServersResponse">
			<wsdl:documentation>Response from the list servers operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="RegisterShipperRequestMessage">
		<wsdl:part name="body" element="amp:registerShipperRequest">
			<wsdl:documentation>Request to register a shipper.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="RegisterShipperResponseMessage">
		<wsdl:part name="body" element="amp:registerShipperResponse">
			<wsdl:documentation>Response from the register shipper operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ResetTransAPIPoolsRequestMessage">
		<wsdl:part name="body" element="amp:resetTransAPIPoolsRequest">
			<wsdl:documentation>Request to reset internal AMP TransAPI pools.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ResetTransAPIPoolsResponseMessage">
		<wsdl:part name="body" element="amp:resetTransAPIPoolsResponse">
			<wsdl:documentation>Response from the reset TransAPI pools operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperAbbreviationRequestMessage">
		<wsdl:part name="body" element="amp:setShipperAbbreviationRequest">
			<wsdl:documentation>Request to set abbreviation for a shipper.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperAbbreviationResponseMessage">
		<wsdl:part name="body" element="amp:setShipperAbbreviationResponse">
			<wsdl:documentation>Response from the set shipper abbreviation operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperConfigInfoRequestMessage">
		<wsdl:part name="body" element="amp:setShipperConfigInfoRequest">
			<wsdl:documentation>Request to set shipper configuration info.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperConfigInfoResponseMessage">
		<wsdl:part name="body" element="amp:setShipperConfigInfoResponse">
			<wsdl:documentation>Response from the set shipper configuration info operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperControlInfoRequestMessage">
		<wsdl:part name="body" element="amp:setShipperControlInfoRequest">
			<wsdl:documentation>Request to set shipper control info.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperControlInfoResponseMessage">
		<wsdl:part name="body" element="amp:setShipperControlInfoResponse">
			<wsdl:documentation>Response from the set shipper control info operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperNameAddressRequestMessage">
		<wsdl:part name="body" element="amp:setShipperNameAddressRequest">
			<wsdl:documentation>Request to set shipper name address.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="SetShipperNameAddressResponseMessage">
		<wsdl:part name="body" element="amp:setShipperNameAddressResponse">
			<wsdl:documentation>Response from the set shipper name address operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="UnRegisterShipperRequestMessage">
		<wsdl:part name="body" element="amp:unRegisterShipperRequest">
			<wsdl:documentation>Request to unregister a shipper.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="UnRegisterShipperResponseMessage">
		<wsdl:part name="body" element="amp:unRegisterShipperResponse">
			<wsdl:documentation>Response from the unregister shipper operation.</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:portType name="CoreXmlPort">
		<wsdl:operation name="CloseOut">
			<wsdl:documentation>Closes out a group of shipped packages.</wsdl:documentation>
			<wsdl:input message="amp:CloseOutRequestMessage"/>
			<wsdl:output message="amp:CloseOutResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="CreateGroup">
			<wsdl:documentation>Creates a new group using the specified data.</wsdl:documentation>
			<wsdl:input message="amp:CreateGroupRequestMessage"/>
			<wsdl:output message="amp:CreateGroupResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="CustomOperation">
			<wsdl:documentation>Performs a custom operation using the specified data.</wsdl:documentation>
			<wsdl:input message="amp:CustomOperationRequestMessage"/>
			<wsdl:output message="amp:CustomOperationResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="DeleteShipFiles">
			<wsdl:documentation>Deletes a list of ship file items.</wsdl:documentation>
			<wsdl:input message="amp:DeleteShipFilesRequestMessage"/>
			<wsdl:output message="amp:DeleteShipFilesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="DeleteTransmitItems">
			<wsdl:documentation>Deletes a list of transmit items without a detailed result for each individual transmit item.</wsdl:documentation>
			<wsdl:input message="amp:DeleteTransmitItemsRequestMessage"/>
			<wsdl:output message="amp:DeleteTransmitItemsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="DeleteTransmitItems2">
			<wsdl:documentation>Deletes a list of transmit items with a detailed result for each individual transmit item.</wsdl:documentation>
			<wsdl:input message="amp:DeleteTransmitItems2RequestMessage"/>
			<wsdl:output message="amp:DeleteTransmitItems2ResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="GetGroup">
			<wsdl:documentation>Gets the detailed information about a group.</wsdl:documentation>
			<wsdl:input message="amp:GetGroupRequestMessage"/>
			<wsdl:output message="amp:GetGroupResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="GetSchema">
			<wsdl:documentation>Gets the current AMP message XML schema.</wsdl:documentation>
			<wsdl:input message="amp:GetSchemaRequestMessage"/>
			<wsdl:output message="amp:GetSchemaResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="GetShipperInformation">
			<wsdl:documentation>Gets the detailed information about a shipper.</wsdl:documentation>
			<wsdl:input message="amp:GetShipperInformationRequestMessage"/>
			<wsdl:output message="amp:GetShipperInformationResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListCarriers">
			<wsdl:documentation>Gets the list of available carriers.</wsdl:documentation>
			<wsdl:input message="amp:ListCarriersRequestMessage"/>
			<wsdl:output message="amp:ListCarriersResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListCategories">
			<wsdl:documentation>Gets the list of available cagetories.</wsdl:documentation>
			<wsdl:input message="amp:ListCategoriesRequestMessage"/>
			<wsdl:output message="amp:ListCategoriesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListInsurers">
			<wsdl:documentation>Gets the list of available insurers.</wsdl:documentation>
			<wsdl:input message="amp:ListInsurersRequestMessage"/>
			<wsdl:output message="amp:ListInsurersResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListCloseOutItems">
			<wsdl:documentation>Gets the list of available close out items.</wsdl:documentation>
			<wsdl:input message="amp:ListCloseOutItemsRequestMessage"/>
			<wsdl:output message="amp:ListCloseOutItemsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListCountries">
			<wsdl:documentation>Gets the list of available countries.</wsdl:documentation>
			<wsdl:input message="amp:ListCountriesRequestMessage"/>
			<wsdl:output message="amp:ListCountriesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListCountryServices">
			<wsdl:documentation>Gets the list of services for a country.</wsdl:documentation>
			<wsdl:input message="amp:ListCountryServicesRequestMessage"/>
			<wsdl:output message="amp:ListCountryServicesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListCurrencies">
			<wsdl:documentation>Gets the list of available currencies.</wsdl:documentation>
			<wsdl:input message="amp:ListCurrenciesRequestMessage"/>
			<wsdl:output message="amp:ListCurrenciesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListDocuments">
			<wsdl:documentation>Gets the list of available documents.</wsdl:documentation>
			<wsdl:input message="amp:ListDocumentsRequestMessage"/>
			<wsdl:output message="amp:ListDocumentsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListDocumentFormats">
			<wsdl:documentation>Gets the list of available formats for a document.</wsdl:documentation>
			<wsdl:input message="amp:ListDocumentFormatsRequestMessage"/>
			<wsdl:output message="amp:ListDocumentFormatsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListGroupings">
			<wsdl:documentation>Gets the list of supported groupings for a carrier.</wsdl:documentation>
			<wsdl:input message="amp:ListGroupingsRequestMessage"/>
			<wsdl:output message="amp:ListGroupingsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListGroups">
			<wsdl:documentation>Gets the list of available groups for a grouping.</wsdl:documentation>
			<wsdl:input message="amp:ListGroupsRequestMessage"/>
			<wsdl:output message="amp:ListGroupsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListIncoterms">
			<wsdl:documentation>Gets the list of available Incoterms.</wsdl:documentation>
			<wsdl:input message="amp:ListIncotermsRequestMessage"/>
			<wsdl:output message="amp:ListIncotermsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListLocalPorts">
			<wsdl:documentation>Gets the list of local printer ports.</wsdl:documentation>
			<wsdl:input message="amp:ListLocalPortsRequestMessage"/>
			<wsdl:output message="amp:ListLocalPortsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListPackagingTypes">
			<wsdl:documentation>Gets the list of available packaging types.</wsdl:documentation>
			<wsdl:input message="amp:ListPackagingTypesRequestMessage"/>
			<wsdl:output message="amp:ListPackagingTypesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListPaymentTypes">
			<wsdl:documentation>Gets the list of available payment types.</wsdl:documentation>
			<wsdl:input message="amp:ListPaymentTypesRequestMessage"/>
			<wsdl:output message="amp:ListPaymentTypesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListPrinterDevices">
			<wsdl:documentation>Gets the list of available printer devices.</wsdl:documentation>
			<wsdl:input message="amp:ListPrinterDevicesRequestMessage"/>
			<wsdl:output message="amp:ListPrinterDevicesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListServices">
			<wsdl:documentation>Gets the list of available carrier services.</wsdl:documentation>
			<wsdl:input message="amp:ListServicesRequestMessage"/>
			<wsdl:output message="amp:ListServicesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListShipFiles">
			<wsdl:documentation>Gets the list of available ship file items for a carrier and shipper.</wsdl:documentation>
			<wsdl:input message="amp:ListShipFilesRequestMessage"/>
			<wsdl:output message="amp:ListShipFilesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListShippers">
			<wsdl:documentation>Gets the list of available shippers.</wsdl:documentation>
			<wsdl:input message="amp:ListShippersRequestMessage"/>
			<wsdl:output message="amp:ListShippersResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListStocks">
			<wsdl:documentation>Gets the list of available printer stocks.</wsdl:documentation>
			<wsdl:input message="amp:ListStocksRequestMessage"/>
			<wsdl:output message="amp:ListStocksResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListTransmitItems">
			<wsdl:documentation>Gets the list of available transmit items for a carrier and shipper.</wsdl:documentation>
			<wsdl:input message="amp:ListTransmitItemsRequestMessage"/>
			<wsdl:output message="amp:ListTransmitItemsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListUnits">
			<wsdl:documentation>Gets the list of available units of measurement.</wsdl:documentation>
			<wsdl:input message="amp:ListUnitsRequestMessage"/>
			<wsdl:output message="amp:ListUnitsResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ListWindowsPrinters">
			<wsdl:documentation>Gets the list of printers configured through Windows.</wsdl:documentation>
			<wsdl:input message="amp:ListWindowsPrintersRequestMessage"/>
			<wsdl:output message="amp:ListWindowsPrintersResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ModifyContainer">
			<wsdl:documentation>Modifies data for a previously saved container.</wsdl:documentation>
			<wsdl:input message="amp:ModifyContainerRequestMessage"/>
			<wsdl:output message="amp:ModifyContainerResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ModifyGroup">
			<wsdl:documentation>Modifies data and/or status for a group</wsdl:documentation>
			<wsdl:input message="amp:ModifyGroupRequestMessage"/>
			<wsdl:output message="amp:ModifyGroupResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ModifyPackages">
			<wsdl:documentation>Modifies data and/or close out mode for a list of packages.</wsdl:documentation>
			<wsdl:input message="amp:ModifyPackagesRequestMessage"/>
			<wsdl:output message="amp:ModifyPackagesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="Print">
			<wsdl:documentation>Prints or saves a document.</wsdl:documentation>
			<wsdl:input message="amp:PrintRequestMessage"/>
			<wsdl:output message="amp:PrintResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="PrintXml">
			<wsdl:documentation>Prints or saves a document from its XML representation.</wsdl:documentation>
			<wsdl:input message="amp:PrintXmlRequestMessage"/>
			<wsdl:output message="amp:PrintXmlResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="Rate">
			<wsdl:documentation>Rates a list of packages using the specified services.</wsdl:documentation>
			<wsdl:input message="amp:RateRequestMessage"/>
			<wsdl:output message="amp:RateResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="Reprocess">
			<wsdl:documentation>Reprocesses a list of already shipped packages.</wsdl:documentation>
			<wsdl:input message="amp:ReprocessRequestMessage"/>
			<wsdl:output message="amp:ReprocessResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="Search">
			<wsdl:documentation>Searches for packages based on the specified criteria</wsdl:documentation>
			<wsdl:input message="amp:SearchRequestMessage"/>
			<wsdl:output message="amp:SearchResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="Ship">
			<wsdl:documentation>Ships a list of packages using the specified service.</wsdl:documentation>
			<wsdl:input message="amp:ShipRequestMessage"/>
			<wsdl:output message="amp:ShipResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="Transmit">
			<wsdl:documentation>Transmits or offloads a list of transmit items.</wsdl:documentation>
			<wsdl:input message="amp:TransmitRequestMessage"/>
			<wsdl:output message="amp:TransmitResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="ValidateAddress">
			<wsdl:documentation>Validates the specified address.</wsdl:documentation>
			<wsdl:input message="amp:ValidateAddressRequestMessage"/>
			<wsdl:output message="amp:ValidateAddressResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="VoidPackages">
			<wsdl:documentation>Voids a list of shipped packages.</wsdl:documentation>
			<wsdl:input message="amp:VoidPackagesRequestMessage"/>
			<wsdl:output message="amp:VoidPackagesResponseMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
		<wsdl:operation name="Compound">
			<wsdl:documentation>Executes a list of operations in a single request.</wsdl:documentation>
			<wsdl:input message="amp:CompoundOperationMessage"/>
			<wsdl:output message="amp:CompoundResultMessage"/>
			<wsdl:fault name="error" message="amp:ErrorMessage"/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="AMPSoapService" type="amp:CoreXmlPort">
		<soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="CloseOut">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="CreateGroup">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="CustomOperation">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="DeleteShipFiles">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="DeleteTransmitItems">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="DeleteTransmitItems2">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="GetGroup">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="GetSchema">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="GetShipperInformation">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListCarriers">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListCategories">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListInsurers">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListCloseOutItems">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListCountries">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListCountryServices">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListCurrencies">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListDocuments">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListDocumentFormats">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListGroupings">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListGroups">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListIncoterms">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListLocalPorts">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListPackagingTypes">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListPaymentTypes">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListPrinterDevices">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListServices">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListShipFiles">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListShippers">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListStocks">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListTransmitItems">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListUnits">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ListWindowsPrinters">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ModifyContainer">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ModifyGroup">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ModifyPackages">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="Print">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="PrintXml">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="Rate">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="Reprocess">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="Search">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="Ship">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="Transmit">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="ValidateAddress">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="VoidPackages">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="Compound">
			<soap12:operation soapAction=""/>
			<wsdl:input>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" encodingStyle="http://www.w3.org/2003/05/soap-encoding"/>
			</wsdl:output>
			<wsdl:fault name="error">
				<soap12:fault use="literal" name="error" namespace=""/>
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="AMPServices">
		<wsdl:port name="AMPSoapService" binding="amp:AMPSoapService">
			<soap12:address location="http://wt-cs/amp/soap"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>